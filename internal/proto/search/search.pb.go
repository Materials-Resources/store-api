// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: search.proto

package search

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Pagination and Facet Metadata
type PageMetadata struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TotalRecords int32                  `protobuf:"varint,1,opt,name=total_records,json=totalRecords"`
	xxx_hidden_CurrentPage  int32                  `protobuf:"varint,2,opt,name=current_page,json=currentPage"`
	xxx_hidden_TotalPages   int32                  `protobuf:"varint,3,opt,name=total_pages,json=totalPages"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PageMetadata) Reset() {
	*x = PageMetadata{}
	mi := &file_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageMetadata) ProtoMessage() {}

func (x *PageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PageMetadata) GetTotalRecords() int32 {
	if x != nil {
		return x.xxx_hidden_TotalRecords
	}
	return 0
}

func (x *PageMetadata) GetCurrentPage() int32 {
	if x != nil {
		return x.xxx_hidden_CurrentPage
	}
	return 0
}

func (x *PageMetadata) GetTotalPages() int32 {
	if x != nil {
		return x.xxx_hidden_TotalPages
	}
	return 0
}

func (x *PageMetadata) SetTotalRecords(v int32) {
	x.xxx_hidden_TotalRecords = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *PageMetadata) SetCurrentPage(v int32) {
	x.xxx_hidden_CurrentPage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *PageMetadata) SetTotalPages(v int32) {
	x.xxx_hidden_TotalPages = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *PageMetadata) HasTotalRecords() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PageMetadata) HasCurrentPage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PageMetadata) HasTotalPages() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PageMetadata) ClearTotalRecords() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TotalRecords = 0
}

func (x *PageMetadata) ClearCurrentPage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CurrentPage = 0
}

func (x *PageMetadata) ClearTotalPages() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalPages = 0
}

type PageMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TotalRecords *int32
	CurrentPage  *int32
	TotalPages   *int32
}

func (b0 PageMetadata_builder) Build() *PageMetadata {
	m0 := &PageMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TotalRecords != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_TotalRecords = *b.TotalRecords
	}
	if b.CurrentPage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_CurrentPage = *b.CurrentPage
	}
	if b.TotalPages != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TotalPages = *b.TotalPages
	}
	return m0
}

// Represents a single aggregation result in a bucket
type BucketAggregation struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key         *string                `protobuf:"bytes,1,opt,name=key"`
	xxx_hidden_Count       int32                  `protobuf:"varint,2,opt,name=count"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BucketAggregation) Reset() {
	*x = BucketAggregation{}
	mi := &file_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BucketAggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketAggregation) ProtoMessage() {}

func (x *BucketAggregation) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BucketAggregation) GetKey() string {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
		return ""
	}
	return ""
}

func (x *BucketAggregation) GetCount() int32 {
	if x != nil {
		return x.xxx_hidden_Count
	}
	return 0
}

func (x *BucketAggregation) SetKey(v string) {
	x.xxx_hidden_Key = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *BucketAggregation) SetCount(v int32) {
	x.xxx_hidden_Count = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *BucketAggregation) HasKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BucketAggregation) HasCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BucketAggregation) ClearKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Key = nil
}

func (x *BucketAggregation) ClearCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Count = 0
}

type BucketAggregation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key   *string
	Count *int32
}

func (b0 BucketAggregation_builder) Build() *BucketAggregation {
	m0 := &BucketAggregation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Key != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Key = b.Key
	}
	if b.Count != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Count = *b.Count
	}
	return m0
}

type TermsAggregation struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FieldName   *string                `protobuf:"bytes,1,opt,name=field_name,json=fieldName"`
	xxx_hidden_Buckets     *[]*BucketAggregation  `protobuf:"bytes,2,rep,name=buckets"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TermsAggregation) Reset() {
	*x = TermsAggregation{}
	mi := &file_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TermsAggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermsAggregation) ProtoMessage() {}

func (x *TermsAggregation) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TermsAggregation) GetFieldName() string {
	if x != nil {
		if x.xxx_hidden_FieldName != nil {
			return *x.xxx_hidden_FieldName
		}
		return ""
	}
	return ""
}

func (x *TermsAggregation) GetBuckets() []*BucketAggregation {
	if x != nil {
		if x.xxx_hidden_Buckets != nil {
			return *x.xxx_hidden_Buckets
		}
	}
	return nil
}

func (x *TermsAggregation) SetFieldName(v string) {
	x.xxx_hidden_FieldName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *TermsAggregation) SetBuckets(v []*BucketAggregation) {
	x.xxx_hidden_Buckets = &v
}

func (x *TermsAggregation) HasFieldName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TermsAggregation) ClearFieldName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FieldName = nil
}

type TermsAggregation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FieldName *string
	Buckets   []*BucketAggregation
}

func (b0 TermsAggregation_builder) Build() *TermsAggregation {
	m0 := &TermsAggregation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FieldName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_FieldName = b.FieldName
	}
	x.xxx_hidden_Buckets = &b.Buckets
	return m0
}

type Aggregation struct {
	state                      protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_AggregationType isAggregation_AggregationType `protobuf_oneof:"aggregation_type"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Aggregation) Reset() {
	*x = Aggregation{}
	mi := &file_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Aggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aggregation) ProtoMessage() {}

func (x *Aggregation) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Aggregation) GetTermsAggregation() *TermsAggregation {
	if x != nil {
		if x, ok := x.xxx_hidden_AggregationType.(*aggregation_TermsAggregation); ok {
			return x.TermsAggregation
		}
	}
	return nil
}

func (x *Aggregation) SetTermsAggregation(v *TermsAggregation) {
	if v == nil {
		x.xxx_hidden_AggregationType = nil
		return
	}
	x.xxx_hidden_AggregationType = &aggregation_TermsAggregation{v}
}

func (x *Aggregation) HasAggregationType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AggregationType != nil
}

func (x *Aggregation) HasTermsAggregation() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_AggregationType.(*aggregation_TermsAggregation)
	return ok
}

func (x *Aggregation) ClearAggregationType() {
	x.xxx_hidden_AggregationType = nil
}

func (x *Aggregation) ClearTermsAggregation() {
	if _, ok := x.xxx_hidden_AggregationType.(*aggregation_TermsAggregation); ok {
		x.xxx_hidden_AggregationType = nil
	}
}

const Aggregation_AggregationType_not_set_case case_Aggregation_AggregationType = 0
const Aggregation_TermsAggregation_case case_Aggregation_AggregationType = 1

func (x *Aggregation) WhichAggregationType() case_Aggregation_AggregationType {
	if x == nil {
		return Aggregation_AggregationType_not_set_case
	}
	switch x.xxx_hidden_AggregationType.(type) {
	case *aggregation_TermsAggregation:
		return Aggregation_TermsAggregation_case
	default:
		return Aggregation_AggregationType_not_set_case
	}
}

type Aggregation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_AggregationType:
	TermsAggregation *TermsAggregation
	// -- end of xxx_hidden_AggregationType
}

func (b0 Aggregation_builder) Build() *Aggregation {
	m0 := &Aggregation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TermsAggregation != nil {
		x.xxx_hidden_AggregationType = &aggregation_TermsAggregation{b.TermsAggregation}
	}
	return m0
}

type case_Aggregation_AggregationType protoreflect.FieldNumber

func (x case_Aggregation_AggregationType) String() string {
	md := file_search_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isAggregation_AggregationType interface {
	isAggregation_AggregationType()
}

type aggregation_TermsAggregation struct {
	TermsAggregation *TermsAggregation `protobuf:"bytes,1,opt,name=terms_aggregation,json=termsAggregation,oneof"`
}

func (*aggregation_TermsAggregation) isAggregation_AggregationType() {}

type Filter struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Values []string               `protobuf:"bytes,1,rep,name=values"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Filter) Reset() {
	*x = Filter{}
	mi := &file_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Filter) GetValues() []string {
	if x != nil {
		return x.xxx_hidden_Values
	}
	return nil
}

func (x *Filter) SetValues(v []string) {
	x.xxx_hidden_Values = v
}

type Filter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Values []string
}

func (b0 Filter_builder) Build() *Filter {
	m0 := &Filter{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Values = b.Values
	return m0
}

type Product struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id               *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Sn               *string                `protobuf:"bytes,2,opt,name=sn"`
	xxx_hidden_Name             *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Description      *string                `protobuf:"bytes,4,opt,name=description"`
	xxx_hidden_ProductGroupName *string                `protobuf:"bytes,5,opt,name=product_group_name,json=productGroupName"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Product) Reset() {
	*x = Product{}
	mi := &file_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Product) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Product) GetSn() string {
	if x != nil {
		if x.xxx_hidden_Sn != nil {
			return *x.xxx_hidden_Sn
		}
		return ""
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Product) GetProductGroupName() string {
	if x != nil {
		if x.xxx_hidden_ProductGroupName != nil {
			return *x.xxx_hidden_ProductGroupName
		}
		return ""
	}
	return ""
}

func (x *Product) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Product) SetSn(v string) {
	x.xxx_hidden_Sn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Product) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Product) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Product) SetProductGroupName(v string) {
	x.xxx_hidden_ProductGroupName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Product) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Product) HasSn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Product) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Product) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Product) HasProductGroupName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Product) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Product) ClearSn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Sn = nil
}

func (x *Product) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *Product) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

func (x *Product) ClearProductGroupName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ProductGroupName = nil
}

type Product_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id               *string
	Sn               *string
	Name             *string
	Description      *string
	ProductGroupName *string
}

func (b0 Product_builder) Build() *Product {
	m0 := &Product{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = b.Id
	}
	if b.Sn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Sn = b.Sn
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Description = b.Description
	}
	if b.ProductGroupName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ProductGroupName = b.ProductGroupName
	}
	return m0
}

// Request and Response Definitions for RPCs
type SearchProductsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Query       *string                `protobuf:"bytes,1,opt,name=query"`
	xxx_hidden_Page        int32                  `protobuf:"varint,2,opt,name=page"`
	xxx_hidden_SortBy      *string                `protobuf:"bytes,3,opt,name=sort_by,json=sortBy"`
	xxx_hidden_Filters     map[string]*Filter     `protobuf:"bytes,4,rep,name=filters" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SearchProductsRequest) Reset() {
	*x = SearchProductsRequest{}
	mi := &file_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductsRequest) ProtoMessage() {}

func (x *SearchProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchProductsRequest) GetQuery() string {
	if x != nil {
		if x.xxx_hidden_Query != nil {
			return *x.xxx_hidden_Query
		}
		return ""
	}
	return ""
}

func (x *SearchProductsRequest) GetPage() int32 {
	if x != nil {
		return x.xxx_hidden_Page
	}
	return 0
}

func (x *SearchProductsRequest) GetSortBy() string {
	if x != nil {
		if x.xxx_hidden_SortBy != nil {
			return *x.xxx_hidden_SortBy
		}
		return ""
	}
	return ""
}

func (x *SearchProductsRequest) GetFilters() map[string]*Filter {
	if x != nil {
		return x.xxx_hidden_Filters
	}
	return nil
}

func (x *SearchProductsRequest) SetQuery(v string) {
	x.xxx_hidden_Query = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SearchProductsRequest) SetPage(v int32) {
	x.xxx_hidden_Page = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SearchProductsRequest) SetSortBy(v string) {
	x.xxx_hidden_SortBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SearchProductsRequest) SetFilters(v map[string]*Filter) {
	x.xxx_hidden_Filters = v
}

func (x *SearchProductsRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SearchProductsRequest) HasPage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SearchProductsRequest) HasSortBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SearchProductsRequest) ClearQuery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Query = nil
}

func (x *SearchProductsRequest) ClearPage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Page = 0
}

func (x *SearchProductsRequest) ClearSortBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SortBy = nil
}

type SearchProductsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query   *string
	Page    *int32
	SortBy  *string
	Filters map[string]*Filter
}

func (b0 SearchProductsRequest_builder) Build() *SearchProductsRequest {
	m0 := &SearchProductsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Query != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Query = b.Query
	}
	if b.Page != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Page = *b.Page
	}
	if b.SortBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_SortBy = b.SortBy
	}
	x.xxx_hidden_Filters = b.Filters
	return m0
}

type SearchProductsResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Products     *[]*Product            `protobuf:"bytes,1,rep,name=products"`
	xxx_hidden_PageMetadata *PageMetadata          `protobuf:"bytes,2,opt,name=page_metadata,json=pageMetadata"`
	xxx_hidden_Aggregations *[]*Aggregation        `protobuf:"bytes,3,rep,name=aggregations"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SearchProductsResponse) Reset() {
	*x = SearchProductsResponse{}
	mi := &file_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductsResponse) ProtoMessage() {}

func (x *SearchProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchProductsResponse) GetProducts() []*Product {
	if x != nil {
		if x.xxx_hidden_Products != nil {
			return *x.xxx_hidden_Products
		}
	}
	return nil
}

func (x *SearchProductsResponse) GetPageMetadata() *PageMetadata {
	if x != nil {
		return x.xxx_hidden_PageMetadata
	}
	return nil
}

func (x *SearchProductsResponse) GetAggregations() []*Aggregation {
	if x != nil {
		if x.xxx_hidden_Aggregations != nil {
			return *x.xxx_hidden_Aggregations
		}
	}
	return nil
}

func (x *SearchProductsResponse) SetProducts(v []*Product) {
	x.xxx_hidden_Products = &v
}

func (x *SearchProductsResponse) SetPageMetadata(v *PageMetadata) {
	x.xxx_hidden_PageMetadata = v
}

func (x *SearchProductsResponse) SetAggregations(v []*Aggregation) {
	x.xxx_hidden_Aggregations = &v
}

func (x *SearchProductsResponse) HasPageMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PageMetadata != nil
}

func (x *SearchProductsResponse) ClearPageMetadata() {
	x.xxx_hidden_PageMetadata = nil
}

type SearchProductsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Products     []*Product
	PageMetadata *PageMetadata
	Aggregations []*Aggregation
}

func (b0 SearchProductsResponse_builder) Build() *SearchProductsResponse {
	m0 := &SearchProductsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Products = &b.Products
	x.xxx_hidden_PageMetadata = b.PageMetadata
	x.xxx_hidden_Aggregations = &b.Aggregations
	return m0
}

type AddProductRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Products *[]*Product            `protobuf:"bytes,1,rep,name=products"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AddProductRequest) Reset() {
	*x = AddProductRequest{}
	mi := &file_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductRequest) ProtoMessage() {}

func (x *AddProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddProductRequest) GetProducts() []*Product {
	if x != nil {
		if x.xxx_hidden_Products != nil {
			return *x.xxx_hidden_Products
		}
	}
	return nil
}

func (x *AddProductRequest) SetProducts(v []*Product) {
	x.xxx_hidden_Products = &v
}

type AddProductRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Products []*Product
}

func (b0 AddProductRequest_builder) Build() *AddProductRequest {
	m0 := &AddProductRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Products = &b.Products
	return m0
}

type AddProductResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success     int32                  `protobuf:"varint,1,opt,name=success"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddProductResponse) Reset() {
	*x = AddProductResponse{}
	mi := &file_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductResponse) ProtoMessage() {}

func (x *AddProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddProductResponse) GetSuccess() int32 {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return 0
}

func (x *AddProductResponse) SetSuccess(v int32) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *AddProductResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AddProductResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Success = 0
}

type AddProductResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Success *int32
}

func (b0 AddProductResponse_builder) Build() *AddProductResponse {
	m0 := &AddProductResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Success = *b.Success
	}
	return m0
}

var File_search_proto protoreflect.FileDescriptor

var file_search_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x22, 0x77, 0x0a, 0x0c, 0x50, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x3b, 0x0a, 0x11, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x69, 0x0a, 0x10, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x6d, 0x0a, 0x0b, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x11, 0x74, 0x65, 0x72,
	0x6d, 0x73, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x10, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x20, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x15,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x47, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x1a, 0x4d, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xc2, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x70, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x43, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xb1, 0x01, 0x0a, 0x0d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x20,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08,
	0x92, 0x03, 0x05, 0xd2, 0x3e, 0x02, 0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_search_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_search_proto_goTypes = []any{
	(*PageMetadata)(nil),           // 0: search.v1.PageMetadata
	(*BucketAggregation)(nil),      // 1: search.v1.BucketAggregation
	(*TermsAggregation)(nil),       // 2: search.v1.TermsAggregation
	(*Aggregation)(nil),            // 3: search.v1.Aggregation
	(*Filter)(nil),                 // 4: search.v1.Filter
	(*Product)(nil),                // 5: search.v1.Product
	(*SearchProductsRequest)(nil),  // 6: search.v1.SearchProductsRequest
	(*SearchProductsResponse)(nil), // 7: search.v1.SearchProductsResponse
	(*AddProductRequest)(nil),      // 8: search.v1.AddProductRequest
	(*AddProductResponse)(nil),     // 9: search.v1.AddProductResponse
	nil,                            // 10: search.v1.SearchProductsRequest.FiltersEntry
}
var file_search_proto_depIdxs = []int32{
	1,  // 0: search.v1.TermsAggregation.buckets:type_name -> search.v1.BucketAggregation
	2,  // 1: search.v1.Aggregation.terms_aggregation:type_name -> search.v1.TermsAggregation
	10, // 2: search.v1.SearchProductsRequest.filters:type_name -> search.v1.SearchProductsRequest.FiltersEntry
	5,  // 3: search.v1.SearchProductsResponse.products:type_name -> search.v1.Product
	0,  // 4: search.v1.SearchProductsResponse.page_metadata:type_name -> search.v1.PageMetadata
	3,  // 5: search.v1.SearchProductsResponse.aggregations:type_name -> search.v1.Aggregation
	5,  // 6: search.v1.AddProductRequest.products:type_name -> search.v1.Product
	4,  // 7: search.v1.SearchProductsRequest.FiltersEntry.value:type_name -> search.v1.Filter
	6,  // 8: search.v1.SearchService.SearchProducts:input_type -> search.v1.SearchProductsRequest
	8,  // 9: search.v1.SearchService.AddProduct:input_type -> search.v1.AddProductRequest
	7,  // 10: search.v1.SearchService.SearchProducts:output_type -> search.v1.SearchProductsResponse
	9,  // 11: search.v1.SearchService.AddProduct:output_type -> search.v1.AddProductResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_search_proto_init() }
func file_search_proto_init() {
	if File_search_proto != nil {
		return
	}
	file_search_proto_msgTypes[3].OneofWrappers = []any{
		(*aggregation_TermsAggregation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_search_proto_rawDesc), len(file_search_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_search_proto_goTypes,
		DependencyIndexes: file_search_proto_depIdxs,
		MessageInfos:      file_search_proto_msgTypes,
	}.Build()
	File_search_proto = out.File
	file_search_proto_goTypes = nil
	file_search_proto_depIdxs = nil
}
