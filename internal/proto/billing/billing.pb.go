// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: billing.proto

package billing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnitOfMeasurement struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id               *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ConversionFactor float64                `protobuf:"fixed64,2,opt,name=conversion_factor,json=conversionFactor"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *UnitOfMeasurement) Reset() {
	*x = UnitOfMeasurement{}
	mi := &file_billing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnitOfMeasurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitOfMeasurement) ProtoMessage() {}

func (x *UnitOfMeasurement) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UnitOfMeasurement) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *UnitOfMeasurement) GetConversionFactor() float64 {
	if x != nil {
		return x.xxx_hidden_ConversionFactor
	}
	return 0
}

func (x *UnitOfMeasurement) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UnitOfMeasurement) SetConversionFactor(v float64) {
	x.xxx_hidden_ConversionFactor = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UnitOfMeasurement) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UnitOfMeasurement) HasConversionFactor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UnitOfMeasurement) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *UnitOfMeasurement) ClearConversionFactor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ConversionFactor = 0
}

type UnitOfMeasurement_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id               *string
	ConversionFactor *float64
}

func (b0 UnitOfMeasurement_builder) Build() *UnitOfMeasurement {
	m0 := &UnitOfMeasurement{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.ConversionFactor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ConversionFactor = *b.ConversionFactor
	}
	return m0
}

type Address struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_LineOne     *string                `protobuf:"bytes,2,opt,name=line_one,json=lineOne"`
	xxx_hidden_LineTwo     *string                `protobuf:"bytes,3,opt,name=line_two,json=lineTwo"`
	xxx_hidden_City        *string                `protobuf:"bytes,4,opt,name=city"`
	xxx_hidden_State       *string                `protobuf:"bytes,5,opt,name=state"`
	xxx_hidden_PostalCode  *string                `protobuf:"bytes,6,opt,name=postal_code,json=postalCode"`
	xxx_hidden_Country     *string                `protobuf:"bytes,7,opt,name=country"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_billing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Address) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Address) GetLineOne() string {
	if x != nil {
		if x.xxx_hidden_LineOne != nil {
			return *x.xxx_hidden_LineOne
		}
		return ""
	}
	return ""
}

func (x *Address) GetLineTwo() string {
	if x != nil {
		if x.xxx_hidden_LineTwo != nil {
			return *x.xxx_hidden_LineTwo
		}
		return ""
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		if x.xxx_hidden_City != nil {
			return *x.xxx_hidden_City
		}
		return ""
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		if x.xxx_hidden_State != nil {
			return *x.xxx_hidden_State
		}
		return ""
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		if x.xxx_hidden_PostalCode != nil {
			return *x.xxx_hidden_PostalCode
		}
		return ""
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		if x.xxx_hidden_Country != nil {
			return *x.xxx_hidden_Country
		}
		return ""
	}
	return ""
}

func (x *Address) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *Address) SetLineOne(v string) {
	x.xxx_hidden_LineOne = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *Address) SetLineTwo(v string) {
	x.xxx_hidden_LineTwo = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *Address) SetCity(v string) {
	x.xxx_hidden_City = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *Address) SetState(v string) {
	x.xxx_hidden_State = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *Address) SetPostalCode(v string) {
	x.xxx_hidden_PostalCode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *Address) SetCountry(v string) {
	x.xxx_hidden_Country = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *Address) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Address) HasLineOne() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Address) HasLineTwo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Address) HasCity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Address) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Address) HasPostalCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Address) HasCountry() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Address) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Address) ClearLineOne() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_LineOne = nil
}

func (x *Address) ClearLineTwo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_LineTwo = nil
}

func (x *Address) ClearCity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_City = nil
}

func (x *Address) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_State = nil
}

func (x *Address) ClearPostalCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_PostalCode = nil
}

func (x *Address) ClearCountry() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Country = nil
}

type Address_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name       *string
	LineOne    *string
	LineTwo    *string
	City       *string
	State      *string
	PostalCode *string
	Country    *string
}

func (b0 Address_builder) Build() *Address {
	m0 := &Address{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.LineOne != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_LineOne = b.LineOne
	}
	if b.LineTwo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_LineTwo = b.LineTwo
	}
	if b.City != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_City = b.City
	}
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_State = b.State
	}
	if b.PostalCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_PostalCode = b.PostalCode
	}
	if b.Country != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Country = b.Country
	}
	return m0
}

type InvoiceSummary struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id           *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_OrderId      *string                `protobuf:"bytes,2,opt,name=order_id,json=orderId"`
	xxx_hidden_DateInvoiced *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_invoiced,json=dateInvoiced"`
	xxx_hidden_TotalAmount  float64                `protobuf:"fixed64,5,opt,name=total_amount,json=totalAmount"`
	xxx_hidden_PaidAmount   float64                `protobuf:"fixed64,6,opt,name=paid_amount,json=paidAmount"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *InvoiceSummary) Reset() {
	*x = InvoiceSummary{}
	mi := &file_billing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvoiceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceSummary) ProtoMessage() {}

func (x *InvoiceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvoiceSummary) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvoiceSummary) GetOrderId() string {
	if x != nil {
		if x.xxx_hidden_OrderId != nil {
			return *x.xxx_hidden_OrderId
		}
		return ""
	}
	return ""
}

func (x *InvoiceSummary) GetDateInvoiced() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateInvoiced
	}
	return nil
}

func (x *InvoiceSummary) GetTotalAmount() float64 {
	if x != nil {
		return x.xxx_hidden_TotalAmount
	}
	return 0
}

func (x *InvoiceSummary) GetPaidAmount() float64 {
	if x != nil {
		return x.xxx_hidden_PaidAmount
	}
	return 0
}

func (x *InvoiceSummary) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *InvoiceSummary) SetOrderId(v string) {
	x.xxx_hidden_OrderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *InvoiceSummary) SetDateInvoiced(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateInvoiced = v
}

func (x *InvoiceSummary) SetTotalAmount(v float64) {
	x.xxx_hidden_TotalAmount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *InvoiceSummary) SetPaidAmount(v float64) {
	x.xxx_hidden_PaidAmount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *InvoiceSummary) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvoiceSummary) HasOrderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvoiceSummary) HasDateInvoiced() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateInvoiced != nil
}

func (x *InvoiceSummary) HasTotalAmount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *InvoiceSummary) HasPaidAmount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *InvoiceSummary) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvoiceSummary) ClearOrderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OrderId = nil
}

func (x *InvoiceSummary) ClearDateInvoiced() {
	x.xxx_hidden_DateInvoiced = nil
}

func (x *InvoiceSummary) ClearTotalAmount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TotalAmount = 0
}

func (x *InvoiceSummary) ClearPaidAmount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_PaidAmount = 0
}

type InvoiceSummary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id           *string
	OrderId      *string
	DateInvoiced *timestamppb.Timestamp
	TotalAmount  *float64
	PaidAmount   *float64
}

func (b0 InvoiceSummary_builder) Build() *InvoiceSummary {
	m0 := &InvoiceSummary{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = b.Id
	}
	if b.OrderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_OrderId = b.OrderId
	}
	x.xxx_hidden_DateInvoiced = b.DateInvoiced
	if b.TotalAmount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_TotalAmount = *b.TotalAmount
	}
	if b.PaidAmount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_PaidAmount = *b.PaidAmount
	}
	return m0
}

type InvoiceTotals struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Subtotal    float64                `protobuf:"fixed64,1,opt,name=subtotal"`
	xxx_hidden_Tax         float64                `protobuf:"fixed64,2,opt,name=tax"`
	xxx_hidden_AmountPaid  float64                `protobuf:"fixed64,4,opt,name=amount_paid,json=amountPaid"`
	xxx_hidden_AmountDue   float64                `protobuf:"fixed64,5,opt,name=amount_due,json=amountDue"`
	xxx_hidden_IsPaid      bool                   `protobuf:"varint,6,opt,name=is_paid,json=isPaid"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvoiceTotals) Reset() {
	*x = InvoiceTotals{}
	mi := &file_billing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvoiceTotals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceTotals) ProtoMessage() {}

func (x *InvoiceTotals) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvoiceTotals) GetSubtotal() float64 {
	if x != nil {
		return x.xxx_hidden_Subtotal
	}
	return 0
}

func (x *InvoiceTotals) GetTax() float64 {
	if x != nil {
		return x.xxx_hidden_Tax
	}
	return 0
}

func (x *InvoiceTotals) GetAmountPaid() float64 {
	if x != nil {
		return x.xxx_hidden_AmountPaid
	}
	return 0
}

func (x *InvoiceTotals) GetAmountDue() float64 {
	if x != nil {
		return x.xxx_hidden_AmountDue
	}
	return 0
}

func (x *InvoiceTotals) GetIsPaid() bool {
	if x != nil {
		return x.xxx_hidden_IsPaid
	}
	return false
}

func (x *InvoiceTotals) SetSubtotal(v float64) {
	x.xxx_hidden_Subtotal = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *InvoiceTotals) SetTax(v float64) {
	x.xxx_hidden_Tax = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *InvoiceTotals) SetAmountPaid(v float64) {
	x.xxx_hidden_AmountPaid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *InvoiceTotals) SetAmountDue(v float64) {
	x.xxx_hidden_AmountDue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *InvoiceTotals) SetIsPaid(v bool) {
	x.xxx_hidden_IsPaid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *InvoiceTotals) HasSubtotal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvoiceTotals) HasTax() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvoiceTotals) HasAmountPaid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *InvoiceTotals) HasAmountDue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *InvoiceTotals) HasIsPaid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *InvoiceTotals) ClearSubtotal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Subtotal = 0
}

func (x *InvoiceTotals) ClearTax() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Tax = 0
}

func (x *InvoiceTotals) ClearAmountPaid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_AmountPaid = 0
}

func (x *InvoiceTotals) ClearAmountDue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_AmountDue = 0
}

func (x *InvoiceTotals) ClearIsPaid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_IsPaid = false
}

type InvoiceTotals_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Subtotal   *float64
	Tax        *float64
	AmountPaid *float64
	AmountDue  *float64
	IsPaid     *bool
}

func (b0 InvoiceTotals_builder) Build() *InvoiceTotals {
	m0 := &InvoiceTotals{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Subtotal != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Subtotal = *b.Subtotal
	}
	if b.Tax != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Tax = *b.Tax
	}
	if b.AmountPaid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_AmountPaid = *b.AmountPaid
	}
	if b.AmountDue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_AmountDue = *b.AmountDue
	}
	if b.IsPaid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_IsPaid = *b.IsPaid
	}
	return m0
}

type Invoice struct {
	state                             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                     *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_OrderId                *string                `protobuf:"bytes,2,opt,name=order_id,json=orderId"`
	xxx_hidden_PurchaseOrder          *string                `protobuf:"bytes,3,opt,name=purchase_order,json=purchaseOrder"`
	xxx_hidden_CustomerId             *string                `protobuf:"bytes,4,opt,name=customer_id,json=customerId"`
	xxx_hidden_DateInvoiced           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date_invoiced,json=dateInvoiced"`
	xxx_hidden_DateOrdered            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date_ordered,json=dateOrdered"`
	xxx_hidden_SalesRepName           *string                `protobuf:"bytes,7,opt,name=sales_rep_name,json=salesRepName"`
	xxx_hidden_TakerName              *string                `protobuf:"bytes,8,opt,name=taker_name,json=takerName"`
	xxx_hidden_BillingAddress         *Address               `protobuf:"bytes,9,opt,name=billing_address,json=billingAddress"`
	xxx_hidden_BillingContact         *string                `protobuf:"bytes,10,opt,name=billing_contact,json=billingContact"`
	xxx_hidden_ShippingAddress        *Address               `protobuf:"bytes,11,opt,name=shipping_address,json=shippingAddress"`
	xxx_hidden_ShippingContact        *string                `protobuf:"bytes,12,opt,name=shipping_contact,json=shippingContact"`
	xxx_hidden_ShippingContactEmail   *string                `protobuf:"bytes,13,opt,name=shipping_contact_email,json=shippingContactEmail"`
	xxx_hidden_ShipmentId             *string                `protobuf:"bytes,14,opt,name=shipment_id,json=shipmentId"`
	xxx_hidden_ShipmentCarrier        *string                `protobuf:"bytes,15,opt,name=shipment_carrier,json=shipmentCarrier"`
	xxx_hidden_ShipmentTrackingNumber *string                `protobuf:"bytes,16,opt,name=shipment_tracking_number,json=shipmentTrackingNumber"`
	xxx_hidden_Terms                  *string                `protobuf:"bytes,17,opt,name=terms"`
	xxx_hidden_TermsDueDate           *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=terms_due_date,json=termsDueDate"`
	xxx_hidden_TermsDiscountTotal     float64                `protobuf:"fixed64,19,opt,name=terms_discount_total,json=termsDiscountTotal"`
	xxx_hidden_TermsDiscountDueDate   *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=terms_discount_due_date,json=termsDiscountDueDate"`
	xxx_hidden_DeliveryInstructions   *string                `protobuf:"bytes,21,opt,name=delivery_instructions,json=deliveryInstructions"`
	xxx_hidden_Totals                 *InvoiceTotals         `protobuf:"bytes,29,opt,name=totals"`
	xxx_hidden_Items                  *[]*Invoice_Item       `protobuf:"bytes,30,rep,name=items"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	mi := &file_billing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Invoice) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetOrderId() string {
	if x != nil {
		if x.xxx_hidden_OrderId != nil {
			return *x.xxx_hidden_OrderId
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetPurchaseOrder() string {
	if x != nil {
		if x.xxx_hidden_PurchaseOrder != nil {
			return *x.xxx_hidden_PurchaseOrder
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetCustomerId() string {
	if x != nil {
		if x.xxx_hidden_CustomerId != nil {
			return *x.xxx_hidden_CustomerId
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetDateInvoiced() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateInvoiced
	}
	return nil
}

func (x *Invoice) GetDateOrdered() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateOrdered
	}
	return nil
}

func (x *Invoice) GetSalesRepName() string {
	if x != nil {
		if x.xxx_hidden_SalesRepName != nil {
			return *x.xxx_hidden_SalesRepName
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetTakerName() string {
	if x != nil {
		if x.xxx_hidden_TakerName != nil {
			return *x.xxx_hidden_TakerName
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetBillingAddress() *Address {
	if x != nil {
		return x.xxx_hidden_BillingAddress
	}
	return nil
}

func (x *Invoice) GetBillingContact() string {
	if x != nil {
		if x.xxx_hidden_BillingContact != nil {
			return *x.xxx_hidden_BillingContact
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetShippingAddress() *Address {
	if x != nil {
		return x.xxx_hidden_ShippingAddress
	}
	return nil
}

func (x *Invoice) GetShippingContact() string {
	if x != nil {
		if x.xxx_hidden_ShippingContact != nil {
			return *x.xxx_hidden_ShippingContact
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetShippingContactEmail() string {
	if x != nil {
		if x.xxx_hidden_ShippingContactEmail != nil {
			return *x.xxx_hidden_ShippingContactEmail
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetShipmentId() string {
	if x != nil {
		if x.xxx_hidden_ShipmentId != nil {
			return *x.xxx_hidden_ShipmentId
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetShipmentCarrier() string {
	if x != nil {
		if x.xxx_hidden_ShipmentCarrier != nil {
			return *x.xxx_hidden_ShipmentCarrier
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetShipmentTrackingNumber() string {
	if x != nil {
		if x.xxx_hidden_ShipmentTrackingNumber != nil {
			return *x.xxx_hidden_ShipmentTrackingNumber
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetTerms() string {
	if x != nil {
		if x.xxx_hidden_Terms != nil {
			return *x.xxx_hidden_Terms
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetTermsDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_TermsDueDate
	}
	return nil
}

func (x *Invoice) GetTermsDiscountTotal() float64 {
	if x != nil {
		return x.xxx_hidden_TermsDiscountTotal
	}
	return 0
}

func (x *Invoice) GetTermsDiscountDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_TermsDiscountDueDate
	}
	return nil
}

func (x *Invoice) GetDeliveryInstructions() string {
	if x != nil {
		if x.xxx_hidden_DeliveryInstructions != nil {
			return *x.xxx_hidden_DeliveryInstructions
		}
		return ""
	}
	return ""
}

func (x *Invoice) GetTotals() *InvoiceTotals {
	if x != nil {
		return x.xxx_hidden_Totals
	}
	return nil
}

func (x *Invoice) GetItems() []*Invoice_Item {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *Invoice) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 23)
}

func (x *Invoice) SetOrderId(v string) {
	x.xxx_hidden_OrderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 23)
}

func (x *Invoice) SetPurchaseOrder(v string) {
	x.xxx_hidden_PurchaseOrder = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 23)
}

func (x *Invoice) SetCustomerId(v string) {
	x.xxx_hidden_CustomerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 23)
}

func (x *Invoice) SetDateInvoiced(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateInvoiced = v
}

func (x *Invoice) SetDateOrdered(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateOrdered = v
}

func (x *Invoice) SetSalesRepName(v string) {
	x.xxx_hidden_SalesRepName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 23)
}

func (x *Invoice) SetTakerName(v string) {
	x.xxx_hidden_TakerName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 23)
}

func (x *Invoice) SetBillingAddress(v *Address) {
	x.xxx_hidden_BillingAddress = v
}

func (x *Invoice) SetBillingContact(v string) {
	x.xxx_hidden_BillingContact = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 23)
}

func (x *Invoice) SetShippingAddress(v *Address) {
	x.xxx_hidden_ShippingAddress = v
}

func (x *Invoice) SetShippingContact(v string) {
	x.xxx_hidden_ShippingContact = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 23)
}

func (x *Invoice) SetShippingContactEmail(v string) {
	x.xxx_hidden_ShippingContactEmail = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 23)
}

func (x *Invoice) SetShipmentId(v string) {
	x.xxx_hidden_ShipmentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 23)
}

func (x *Invoice) SetShipmentCarrier(v string) {
	x.xxx_hidden_ShipmentCarrier = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 23)
}

func (x *Invoice) SetShipmentTrackingNumber(v string) {
	x.xxx_hidden_ShipmentTrackingNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 23)
}

func (x *Invoice) SetTerms(v string) {
	x.xxx_hidden_Terms = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 23)
}

func (x *Invoice) SetTermsDueDate(v *timestamppb.Timestamp) {
	x.xxx_hidden_TermsDueDate = v
}

func (x *Invoice) SetTermsDiscountTotal(v float64) {
	x.xxx_hidden_TermsDiscountTotal = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 18, 23)
}

func (x *Invoice) SetTermsDiscountDueDate(v *timestamppb.Timestamp) {
	x.xxx_hidden_TermsDiscountDueDate = v
}

func (x *Invoice) SetDeliveryInstructions(v string) {
	x.xxx_hidden_DeliveryInstructions = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 20, 23)
}

func (x *Invoice) SetTotals(v *InvoiceTotals) {
	x.xxx_hidden_Totals = v
}

func (x *Invoice) SetItems(v []*Invoice_Item) {
	x.xxx_hidden_Items = &v
}

func (x *Invoice) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Invoice) HasOrderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Invoice) HasPurchaseOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Invoice) HasCustomerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Invoice) HasDateInvoiced() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateInvoiced != nil
}

func (x *Invoice) HasDateOrdered() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateOrdered != nil
}

func (x *Invoice) HasSalesRepName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Invoice) HasTakerName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Invoice) HasBillingAddress() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BillingAddress != nil
}

func (x *Invoice) HasBillingContact() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Invoice) HasShippingAddress() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ShippingAddress != nil
}

func (x *Invoice) HasShippingContact() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Invoice) HasShippingContactEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *Invoice) HasShipmentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *Invoice) HasShipmentCarrier() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Invoice) HasShipmentTrackingNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *Invoice) HasTerms() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *Invoice) HasTermsDueDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TermsDueDate != nil
}

func (x *Invoice) HasTermsDiscountTotal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 18)
}

func (x *Invoice) HasTermsDiscountDueDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TermsDiscountDueDate != nil
}

func (x *Invoice) HasDeliveryInstructions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 20)
}

func (x *Invoice) HasTotals() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Totals != nil
}

func (x *Invoice) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Invoice) ClearOrderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OrderId = nil
}

func (x *Invoice) ClearPurchaseOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PurchaseOrder = nil
}

func (x *Invoice) ClearCustomerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CustomerId = nil
}

func (x *Invoice) ClearDateInvoiced() {
	x.xxx_hidden_DateInvoiced = nil
}

func (x *Invoice) ClearDateOrdered() {
	x.xxx_hidden_DateOrdered = nil
}

func (x *Invoice) ClearSalesRepName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_SalesRepName = nil
}

func (x *Invoice) ClearTakerName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_TakerName = nil
}

func (x *Invoice) ClearBillingAddress() {
	x.xxx_hidden_BillingAddress = nil
}

func (x *Invoice) ClearBillingContact() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_BillingContact = nil
}

func (x *Invoice) ClearShippingAddress() {
	x.xxx_hidden_ShippingAddress = nil
}

func (x *Invoice) ClearShippingContact() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_ShippingContact = nil
}

func (x *Invoice) ClearShippingContactEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_ShippingContactEmail = nil
}

func (x *Invoice) ClearShipmentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_ShipmentId = nil
}

func (x *Invoice) ClearShipmentCarrier() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_ShipmentCarrier = nil
}

func (x *Invoice) ClearShipmentTrackingNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_ShipmentTrackingNumber = nil
}

func (x *Invoice) ClearTerms() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_Terms = nil
}

func (x *Invoice) ClearTermsDueDate() {
	x.xxx_hidden_TermsDueDate = nil
}

func (x *Invoice) ClearTermsDiscountTotal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 18)
	x.xxx_hidden_TermsDiscountTotal = 0
}

func (x *Invoice) ClearTermsDiscountDueDate() {
	x.xxx_hidden_TermsDiscountDueDate = nil
}

func (x *Invoice) ClearDeliveryInstructions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 20)
	x.xxx_hidden_DeliveryInstructions = nil
}

func (x *Invoice) ClearTotals() {
	x.xxx_hidden_Totals = nil
}

type Invoice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                     *string
	OrderId                *string
	PurchaseOrder          *string
	CustomerId             *string
	DateInvoiced           *timestamppb.Timestamp
	DateOrdered            *timestamppb.Timestamp
	SalesRepName           *string
	TakerName              *string
	BillingAddress         *Address
	BillingContact         *string
	ShippingAddress        *Address
	ShippingContact        *string
	ShippingContactEmail   *string
	ShipmentId             *string
	ShipmentCarrier        *string
	ShipmentTrackingNumber *string
	Terms                  *string
	TermsDueDate           *timestamppb.Timestamp
	TermsDiscountTotal     *float64
	TermsDiscountDueDate   *timestamppb.Timestamp
	DeliveryInstructions   *string
	Totals                 *InvoiceTotals
	Items                  []*Invoice_Item
}

func (b0 Invoice_builder) Build() *Invoice {
	m0 := &Invoice{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 23)
		x.xxx_hidden_Id = b.Id
	}
	if b.OrderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 23)
		x.xxx_hidden_OrderId = b.OrderId
	}
	if b.PurchaseOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 23)
		x.xxx_hidden_PurchaseOrder = b.PurchaseOrder
	}
	if b.CustomerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 23)
		x.xxx_hidden_CustomerId = b.CustomerId
	}
	x.xxx_hidden_DateInvoiced = b.DateInvoiced
	x.xxx_hidden_DateOrdered = b.DateOrdered
	if b.SalesRepName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 23)
		x.xxx_hidden_SalesRepName = b.SalesRepName
	}
	if b.TakerName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 23)
		x.xxx_hidden_TakerName = b.TakerName
	}
	x.xxx_hidden_BillingAddress = b.BillingAddress
	if b.BillingContact != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 23)
		x.xxx_hidden_BillingContact = b.BillingContact
	}
	x.xxx_hidden_ShippingAddress = b.ShippingAddress
	if b.ShippingContact != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 23)
		x.xxx_hidden_ShippingContact = b.ShippingContact
	}
	if b.ShippingContactEmail != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 23)
		x.xxx_hidden_ShippingContactEmail = b.ShippingContactEmail
	}
	if b.ShipmentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 23)
		x.xxx_hidden_ShipmentId = b.ShipmentId
	}
	if b.ShipmentCarrier != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 23)
		x.xxx_hidden_ShipmentCarrier = b.ShipmentCarrier
	}
	if b.ShipmentTrackingNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 23)
		x.xxx_hidden_ShipmentTrackingNumber = b.ShipmentTrackingNumber
	}
	if b.Terms != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 23)
		x.xxx_hidden_Terms = b.Terms
	}
	x.xxx_hidden_TermsDueDate = b.TermsDueDate
	if b.TermsDiscountTotal != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 18, 23)
		x.xxx_hidden_TermsDiscountTotal = *b.TermsDiscountTotal
	}
	x.xxx_hidden_TermsDiscountDueDate = b.TermsDiscountDueDate
	if b.DeliveryInstructions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 20, 23)
		x.xxx_hidden_DeliveryInstructions = b.DeliveryInstructions
	}
	x.xxx_hidden_Totals = b.Totals
	x.xxx_hidden_Items = &b.Items
	return m0
}

type GetInvoicesByOrderRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OrderId     *string                `protobuf:"bytes,1,opt,name=order_id,json=orderId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetInvoicesByOrderRequest) Reset() {
	*x = GetInvoicesByOrderRequest{}
	mi := &file_billing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvoicesByOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoicesByOrderRequest) ProtoMessage() {}

func (x *GetInvoicesByOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetInvoicesByOrderRequest) GetOrderId() string {
	if x != nil {
		if x.xxx_hidden_OrderId != nil {
			return *x.xxx_hidden_OrderId
		}
		return ""
	}
	return ""
}

func (x *GetInvoicesByOrderRequest) SetOrderId(v string) {
	x.xxx_hidden_OrderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetInvoicesByOrderRequest) HasOrderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetInvoicesByOrderRequest) ClearOrderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_OrderId = nil
}

type GetInvoicesByOrderRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OrderId *string
}

func (b0 GetInvoicesByOrderRequest_builder) Build() *GetInvoicesByOrderRequest {
	m0 := &GetInvoicesByOrderRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.OrderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_OrderId = b.OrderId
	}
	return m0
}

type GetInvoicesByOrderResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Invoices *[]*InvoiceSummary     `protobuf:"bytes,1,rep,name=invoices"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetInvoicesByOrderResponse) Reset() {
	*x = GetInvoicesByOrderResponse{}
	mi := &file_billing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvoicesByOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoicesByOrderResponse) ProtoMessage() {}

func (x *GetInvoicesByOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetInvoicesByOrderResponse) GetInvoices() []*InvoiceSummary {
	if x != nil {
		if x.xxx_hidden_Invoices != nil {
			return *x.xxx_hidden_Invoices
		}
	}
	return nil
}

func (x *GetInvoicesByOrderResponse) SetInvoices(v []*InvoiceSummary) {
	x.xxx_hidden_Invoices = &v
}

type GetInvoicesByOrderResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Invoices []*InvoiceSummary
}

func (b0 GetInvoicesByOrderResponse_builder) Build() *GetInvoicesByOrderResponse {
	m0 := &GetInvoicesByOrderResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Invoices = &b.Invoices
	return m0
}

type GetInvoiceRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetInvoiceRequest) Reset() {
	*x = GetInvoiceRequest{}
	mi := &file_billing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoiceRequest) ProtoMessage() {}

func (x *GetInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetInvoiceRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetInvoiceRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetInvoiceRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetInvoiceRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type GetInvoiceRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 GetInvoiceRequest_builder) Build() *GetInvoiceRequest {
	m0 := &GetInvoiceRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type GetInvoiceResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Invoice *Invoice               `protobuf:"bytes,1,opt,name=invoice"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetInvoiceResponse) Reset() {
	*x = GetInvoiceResponse{}
	mi := &file_billing_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvoiceResponse) ProtoMessage() {}

func (x *GetInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetInvoiceResponse) GetInvoice() *Invoice {
	if x != nil {
		return x.xxx_hidden_Invoice
	}
	return nil
}

func (x *GetInvoiceResponse) SetInvoice(v *Invoice) {
	x.xxx_hidden_Invoice = v
}

func (x *GetInvoiceResponse) HasInvoice() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Invoice != nil
}

func (x *GetInvoiceResponse) ClearInvoice() {
	x.xxx_hidden_Invoice = nil
}

type GetInvoiceResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Invoice *Invoice
}

func (b0 GetInvoiceResponse_builder) Build() *GetInvoiceResponse {
	m0 := &GetInvoiceResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Invoice = b.Invoice
	return m0
}

type Invoice_Item struct {
	state                                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ProductId                 *string                `protobuf:"bytes,1,opt,name=product_id,json=productId"`
	xxx_hidden_ProductSn                 *string                `protobuf:"bytes,2,opt,name=product_sn,json=productSn"`
	xxx_hidden_ProductName               *string                `protobuf:"bytes,3,opt,name=product_name,json=productName"`
	xxx_hidden_ProductDescription        *string                `protobuf:"bytes,4,opt,name=product_description,json=productDescription"`
	xxx_hidden_CustomerProductSn         *string                `protobuf:"bytes,5,opt,name=customer_product_sn,json=customerProductSn"`
	xxx_hidden_OrderedQuantity           float64                `protobuf:"fixed64,6,opt,name=ordered_quantity,json=orderedQuantity"`
	xxx_hidden_ShippedQuantity           float64                `protobuf:"fixed64,7,opt,name=shipped_quantity,json=shippedQuantity"`
	xxx_hidden_RemainingQuantity         float64                `protobuf:"fixed64,8,opt,name=remaining_quantity,json=remainingQuantity"`
	xxx_hidden_SalesUnitOfMeasurement    *UnitOfMeasurement     `protobuf:"bytes,9,opt,name=sales_unit_of_measurement,json=salesUnitOfMeasurement"`
	xxx_hidden_UnitPrice                 float64                `protobuf:"fixed64,10,opt,name=unit_price,json=unitPrice"`
	xxx_hidden_PurchaseUnitOfMeasurement *UnitOfMeasurement     `protobuf:"bytes,11,opt,name=purchase_unit_of_measurement,json=purchaseUnitOfMeasurement"`
	xxx_hidden_LineTotal                 float64                `protobuf:"fixed64,12,opt,name=line_total,json=lineTotal"`
	XXX_raceDetectHookData               protoimpl.RaceDetectHookData
	XXX_presence                         [1]uint32
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *Invoice_Item) Reset() {
	*x = Invoice_Item{}
	mi := &file_billing_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Invoice_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice_Item) ProtoMessage() {}

func (x *Invoice_Item) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Invoice_Item) GetProductId() string {
	if x != nil {
		if x.xxx_hidden_ProductId != nil {
			return *x.xxx_hidden_ProductId
		}
		return ""
	}
	return ""
}

func (x *Invoice_Item) GetProductSn() string {
	if x != nil {
		if x.xxx_hidden_ProductSn != nil {
			return *x.xxx_hidden_ProductSn
		}
		return ""
	}
	return ""
}

func (x *Invoice_Item) GetProductName() string {
	if x != nil {
		if x.xxx_hidden_ProductName != nil {
			return *x.xxx_hidden_ProductName
		}
		return ""
	}
	return ""
}

func (x *Invoice_Item) GetProductDescription() string {
	if x != nil {
		if x.xxx_hidden_ProductDescription != nil {
			return *x.xxx_hidden_ProductDescription
		}
		return ""
	}
	return ""
}

func (x *Invoice_Item) GetCustomerProductSn() string {
	if x != nil {
		if x.xxx_hidden_CustomerProductSn != nil {
			return *x.xxx_hidden_CustomerProductSn
		}
		return ""
	}
	return ""
}

func (x *Invoice_Item) GetOrderedQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_OrderedQuantity
	}
	return 0
}

func (x *Invoice_Item) GetShippedQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_ShippedQuantity
	}
	return 0
}

func (x *Invoice_Item) GetRemainingQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_RemainingQuantity
	}
	return 0
}

func (x *Invoice_Item) GetSalesUnitOfMeasurement() *UnitOfMeasurement {
	if x != nil {
		return x.xxx_hidden_SalesUnitOfMeasurement
	}
	return nil
}

func (x *Invoice_Item) GetUnitPrice() float64 {
	if x != nil {
		return x.xxx_hidden_UnitPrice
	}
	return 0
}

func (x *Invoice_Item) GetPurchaseUnitOfMeasurement() *UnitOfMeasurement {
	if x != nil {
		return x.xxx_hidden_PurchaseUnitOfMeasurement
	}
	return nil
}

func (x *Invoice_Item) GetLineTotal() float64 {
	if x != nil {
		return x.xxx_hidden_LineTotal
	}
	return 0
}

func (x *Invoice_Item) SetProductId(v string) {
	x.xxx_hidden_ProductId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 12)
}

func (x *Invoice_Item) SetProductSn(v string) {
	x.xxx_hidden_ProductSn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 12)
}

func (x *Invoice_Item) SetProductName(v string) {
	x.xxx_hidden_ProductName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 12)
}

func (x *Invoice_Item) SetProductDescription(v string) {
	x.xxx_hidden_ProductDescription = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 12)
}

func (x *Invoice_Item) SetCustomerProductSn(v string) {
	x.xxx_hidden_CustomerProductSn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 12)
}

func (x *Invoice_Item) SetOrderedQuantity(v float64) {
	x.xxx_hidden_OrderedQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 12)
}

func (x *Invoice_Item) SetShippedQuantity(v float64) {
	x.xxx_hidden_ShippedQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 12)
}

func (x *Invoice_Item) SetRemainingQuantity(v float64) {
	x.xxx_hidden_RemainingQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 12)
}

func (x *Invoice_Item) SetSalesUnitOfMeasurement(v *UnitOfMeasurement) {
	x.xxx_hidden_SalesUnitOfMeasurement = v
}

func (x *Invoice_Item) SetUnitPrice(v float64) {
	x.xxx_hidden_UnitPrice = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 12)
}

func (x *Invoice_Item) SetPurchaseUnitOfMeasurement(v *UnitOfMeasurement) {
	x.xxx_hidden_PurchaseUnitOfMeasurement = v
}

func (x *Invoice_Item) SetLineTotal(v float64) {
	x.xxx_hidden_LineTotal = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 12)
}

func (x *Invoice_Item) HasProductId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Invoice_Item) HasProductSn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Invoice_Item) HasProductName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Invoice_Item) HasProductDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Invoice_Item) HasCustomerProductSn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Invoice_Item) HasOrderedQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Invoice_Item) HasShippedQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Invoice_Item) HasRemainingQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Invoice_Item) HasSalesUnitOfMeasurement() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SalesUnitOfMeasurement != nil
}

func (x *Invoice_Item) HasUnitPrice() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Invoice_Item) HasPurchaseUnitOfMeasurement() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PurchaseUnitOfMeasurement != nil
}

func (x *Invoice_Item) HasLineTotal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Invoice_Item) ClearProductId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ProductId = nil
}

func (x *Invoice_Item) ClearProductSn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProductSn = nil
}

func (x *Invoice_Item) ClearProductName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ProductName = nil
}

func (x *Invoice_Item) ClearProductDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProductDescription = nil
}

func (x *Invoice_Item) ClearCustomerProductSn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CustomerProductSn = nil
}

func (x *Invoice_Item) ClearOrderedQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_OrderedQuantity = 0
}

func (x *Invoice_Item) ClearShippedQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ShippedQuantity = 0
}

func (x *Invoice_Item) ClearRemainingQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_RemainingQuantity = 0
}

func (x *Invoice_Item) ClearSalesUnitOfMeasurement() {
	x.xxx_hidden_SalesUnitOfMeasurement = nil
}

func (x *Invoice_Item) ClearUnitPrice() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_UnitPrice = 0
}

func (x *Invoice_Item) ClearPurchaseUnitOfMeasurement() {
	x.xxx_hidden_PurchaseUnitOfMeasurement = nil
}

func (x *Invoice_Item) ClearLineTotal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_LineTotal = 0
}

type Invoice_Item_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ProductId                 *string
	ProductSn                 *string
	ProductName               *string
	ProductDescription        *string
	CustomerProductSn         *string
	OrderedQuantity           *float64
	ShippedQuantity           *float64
	RemainingQuantity         *float64
	SalesUnitOfMeasurement    *UnitOfMeasurement
	UnitPrice                 *float64
	PurchaseUnitOfMeasurement *UnitOfMeasurement
	LineTotal                 *float64
}

func (b0 Invoice_Item_builder) Build() *Invoice_Item {
	m0 := &Invoice_Item{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProductId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 12)
		x.xxx_hidden_ProductId = b.ProductId
	}
	if b.ProductSn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 12)
		x.xxx_hidden_ProductSn = b.ProductSn
	}
	if b.ProductName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 12)
		x.xxx_hidden_ProductName = b.ProductName
	}
	if b.ProductDescription != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 12)
		x.xxx_hidden_ProductDescription = b.ProductDescription
	}
	if b.CustomerProductSn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 12)
		x.xxx_hidden_CustomerProductSn = b.CustomerProductSn
	}
	if b.OrderedQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 12)
		x.xxx_hidden_OrderedQuantity = *b.OrderedQuantity
	}
	if b.ShippedQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 12)
		x.xxx_hidden_ShippedQuantity = *b.ShippedQuantity
	}
	if b.RemainingQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 12)
		x.xxx_hidden_RemainingQuantity = *b.RemainingQuantity
	}
	x.xxx_hidden_SalesUnitOfMeasurement = b.SalesUnitOfMeasurement
	if b.UnitPrice != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 12)
		x.xxx_hidden_UnitPrice = *b.UnitPrice
	}
	x.xxx_hidden_PurchaseUnitOfMeasurement = b.PurchaseUnitOfMeasurement
	if b.LineTotal != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 12)
		x.xxx_hidden_LineTotal = *b.LineTotal
	}
	return m0
}

var File_billing_proto protoreflect.FileDescriptor

var file_billing_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x11,
	0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xb8,
	0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x77, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xc0, 0x01, 0x0a, 0x0e, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96, 0x01, 0x0a,
	0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x50, 0x61, 0x69, 0x64, 0x22, 0x8c, 0x0d, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x3e, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x38, 0x0a,
	0x18, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x40, 0x0a,
	0x0e, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x74,
	0x65, 0x72, 0x6d, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x51, 0x0a, 0x17, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x73, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xc5, 0x04, 0x0a,
	0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a,
	0x12, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x19,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69,
	0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x16,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x1c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x19, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x36, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x32, 0xc2, 0x01, 0x0a,
	0x0e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x08, 0x92, 0x03, 0x05, 0xd2, 0x3e, 0x02, 0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_billing_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_billing_proto_goTypes = []any{
	(*UnitOfMeasurement)(nil),          // 0: billing.v1.UnitOfMeasurement
	(*Address)(nil),                    // 1: billing.v1.Address
	(*InvoiceSummary)(nil),             // 2: billing.v1.InvoiceSummary
	(*InvoiceTotals)(nil),              // 3: billing.v1.InvoiceTotals
	(*Invoice)(nil),                    // 4: billing.v1.Invoice
	(*GetInvoicesByOrderRequest)(nil),  // 5: billing.v1.GetInvoicesByOrderRequest
	(*GetInvoicesByOrderResponse)(nil), // 6: billing.v1.GetInvoicesByOrderResponse
	(*GetInvoiceRequest)(nil),          // 7: billing.v1.GetInvoiceRequest
	(*GetInvoiceResponse)(nil),         // 8: billing.v1.GetInvoiceResponse
	(*Invoice_Item)(nil),               // 9: billing.v1.Invoice.Item
	(*timestamppb.Timestamp)(nil),      // 10: google.protobuf.Timestamp
}
var file_billing_proto_depIdxs = []int32{
	10, // 0: billing.v1.InvoiceSummary.date_invoiced:type_name -> google.protobuf.Timestamp
	10, // 1: billing.v1.Invoice.date_invoiced:type_name -> google.protobuf.Timestamp
	10, // 2: billing.v1.Invoice.date_ordered:type_name -> google.protobuf.Timestamp
	1,  // 3: billing.v1.Invoice.billing_address:type_name -> billing.v1.Address
	1,  // 4: billing.v1.Invoice.shipping_address:type_name -> billing.v1.Address
	10, // 5: billing.v1.Invoice.terms_due_date:type_name -> google.protobuf.Timestamp
	10, // 6: billing.v1.Invoice.terms_discount_due_date:type_name -> google.protobuf.Timestamp
	3,  // 7: billing.v1.Invoice.totals:type_name -> billing.v1.InvoiceTotals
	9,  // 8: billing.v1.Invoice.items:type_name -> billing.v1.Invoice.Item
	2,  // 9: billing.v1.GetInvoicesByOrderResponse.invoices:type_name -> billing.v1.InvoiceSummary
	4,  // 10: billing.v1.GetInvoiceResponse.invoice:type_name -> billing.v1.Invoice
	0,  // 11: billing.v1.Invoice.Item.sales_unit_of_measurement:type_name -> billing.v1.UnitOfMeasurement
	0,  // 12: billing.v1.Invoice.Item.purchase_unit_of_measurement:type_name -> billing.v1.UnitOfMeasurement
	5,  // 13: billing.v1.BillingService.GetInvoicesByOrder:input_type -> billing.v1.GetInvoicesByOrderRequest
	7,  // 14: billing.v1.BillingService.GetInvoice:input_type -> billing.v1.GetInvoiceRequest
	6,  // 15: billing.v1.BillingService.GetInvoicesByOrder:output_type -> billing.v1.GetInvoicesByOrderResponse
	8,  // 16: billing.v1.BillingService.GetInvoice:output_type -> billing.v1.GetInvoiceResponse
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_billing_proto_init() }
func file_billing_proto_init() {
	if File_billing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_billing_proto_rawDesc), len(file_billing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_billing_proto_goTypes,
		DependencyIndexes: file_billing_proto_depIdxs,
		MessageInfos:      file_billing_proto_msgTypes,
	}.Build()
	File_billing_proto = out.File
	file_billing_proto_goTypes = nil
	file_billing_proto_depIdxs = nil
}
