// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: order.proto

package order

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderStatus int32

const (
	OrderStatus_ORDER_STATUS_UNSPECIFIED      OrderStatus = 0
	OrderStatus_ORDER_STATUS_APPROVED         OrderStatus = 1
	OrderStatus_ORDER_STATUS_COMPLETED        OrderStatus = 2
	OrderStatus_ORDER_STATUS_CANCELLED        OrderStatus = 3
	OrderStatus_ORDER_STATUS_PENDING_APPROVAL OrderStatus = 4
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "ORDER_STATUS_UNSPECIFIED",
		1: "ORDER_STATUS_APPROVED",
		2: "ORDER_STATUS_COMPLETED",
		3: "ORDER_STATUS_CANCELLED",
		4: "ORDER_STATUS_PENDING_APPROVAL",
	}
	OrderStatus_value = map[string]int32{
		"ORDER_STATUS_UNSPECIFIED":      0,
		"ORDER_STATUS_APPROVED":         1,
		"ORDER_STATUS_COMPLETED":        2,
		"ORDER_STATUS_CANCELLED":        3,
		"ORDER_STATUS_PENDING_APPROVAL": 4,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[0].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[0]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type QuoteStatus int32

const (
	QuoteStatus_QUOTE_STATUS_UNSPECIFIED      QuoteStatus = 0
	QuoteStatus_QUOTE_STATUS_PENDING_APPROVAL QuoteStatus = 1
	QuoteStatus_QUOTE_STATUS_APPROVED         QuoteStatus = 2
	QuoteStatus_QUOTE_STATUS_CANCELLED        QuoteStatus = 3
	QuoteStatus_QUOTE_STATUS_EXPIRED          QuoteStatus = 4
)

// Enum value maps for QuoteStatus.
var (
	QuoteStatus_name = map[int32]string{
		0: "QUOTE_STATUS_UNSPECIFIED",
		1: "QUOTE_STATUS_PENDING_APPROVAL",
		2: "QUOTE_STATUS_APPROVED",
		3: "QUOTE_STATUS_CANCELLED",
		4: "QUOTE_STATUS_EXPIRED",
	}
	QuoteStatus_value = map[string]int32{
		"QUOTE_STATUS_UNSPECIFIED":      0,
		"QUOTE_STATUS_PENDING_APPROVAL": 1,
		"QUOTE_STATUS_APPROVED":         2,
		"QUOTE_STATUS_CANCELLED":        3,
		"QUOTE_STATUS_EXPIRED":          4,
	}
)

func (x QuoteStatus) Enum() *QuoteStatus {
	p := new(QuoteStatus)
	*p = x
	return p
}

func (x QuoteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuoteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_order_proto_enumTypes[1].Descriptor()
}

func (QuoteStatus) Type() protoreflect.EnumType {
	return &file_order_proto_enumTypes[1]
}

func (x QuoteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type UnitOfMeasurement struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id               *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ConversionFactor float64                `protobuf:"fixed64,2,opt,name=conversion_factor,json=conversionFactor"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *UnitOfMeasurement) Reset() {
	*x = UnitOfMeasurement{}
	mi := &file_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnitOfMeasurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitOfMeasurement) ProtoMessage() {}

func (x *UnitOfMeasurement) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UnitOfMeasurement) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *UnitOfMeasurement) GetConversionFactor() float64 {
	if x != nil {
		return x.xxx_hidden_ConversionFactor
	}
	return 0
}

func (x *UnitOfMeasurement) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *UnitOfMeasurement) SetConversionFactor(v float64) {
	x.xxx_hidden_ConversionFactor = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *UnitOfMeasurement) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UnitOfMeasurement) HasConversionFactor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UnitOfMeasurement) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *UnitOfMeasurement) ClearConversionFactor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ConversionFactor = 0
}

type UnitOfMeasurement_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id               *string
	ConversionFactor *float64
}

func (b0 UnitOfMeasurement_builder) Build() *UnitOfMeasurement {
	m0 := &UnitOfMeasurement{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.ConversionFactor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ConversionFactor = *b.ConversionFactor
	}
	return m0
}

type Customer struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Customer) Reset() {
	*x = Customer{}
	mi := &file_order_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Customer) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Customer) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Customer) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Customer) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Customer) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Customer) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Customer) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Customer) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type Customer_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *string
	Name *string
}

func (b0 Customer_builder) Build() *Customer {
	m0 := &Customer{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type Contact struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_FullName    *string                `protobuf:"bytes,2,opt,name=full_name,json=fullName"`
	xxx_hidden_PhoneNumber *string                `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber"`
	xxx_hidden_Email       *string                `protobuf:"bytes,4,opt,name=email"`
	xxx_hidden_Title       *string                `protobuf:"bytes,5,opt,name=title"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Contact) Reset() {
	*x = Contact{}
	mi := &file_order_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Contact) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Contact) GetFullName() string {
	if x != nil {
		if x.xxx_hidden_FullName != nil {
			return *x.xxx_hidden_FullName
		}
		return ""
	}
	return ""
}

func (x *Contact) GetPhoneNumber() string {
	if x != nil {
		if x.xxx_hidden_PhoneNumber != nil {
			return *x.xxx_hidden_PhoneNumber
		}
		return ""
	}
	return ""
}

func (x *Contact) GetEmail() string {
	if x != nil {
		if x.xxx_hidden_Email != nil {
			return *x.xxx_hidden_Email
		}
		return ""
	}
	return ""
}

func (x *Contact) GetTitle() string {
	if x != nil {
		if x.xxx_hidden_Title != nil {
			return *x.xxx_hidden_Title
		}
		return ""
	}
	return ""
}

func (x *Contact) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Contact) SetFullName(v string) {
	x.xxx_hidden_FullName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *Contact) SetPhoneNumber(v string) {
	x.xxx_hidden_PhoneNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *Contact) SetEmail(v string) {
	x.xxx_hidden_Email = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Contact) SetTitle(v string) {
	x.xxx_hidden_Title = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Contact) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Contact) HasFullName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Contact) HasPhoneNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Contact) HasEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Contact) HasTitle() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Contact) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Contact) ClearFullName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FullName = nil
}

func (x *Contact) ClearPhoneNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PhoneNumber = nil
}

func (x *Contact) ClearEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Email = nil
}

func (x *Contact) ClearTitle() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Title = nil
}

type Contact_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	FullName    *string
	PhoneNumber *string
	Email       *string
	Title       *string
}

func (b0 Contact_builder) Build() *Contact {
	m0 := &Contact{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = b.Id
	}
	if b.FullName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FullName = b.FullName
	}
	if b.PhoneNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_PhoneNumber = b.PhoneNumber
	}
	if b.Email != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Email = b.Email
	}
	if b.Title != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Title = b.Title
	}
	return m0
}

type Branch struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Branch) Reset() {
	*x = Branch{}
	mi := &file_order_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Branch) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Branch) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Branch) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Branch) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Branch) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Branch) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Branch) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Branch) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type Branch_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *string
	Name *string
}

func (b0 Branch_builder) Build() *Branch {
	m0 := &Branch{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type QuoteSummary struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id            *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Contact       *Contact               `protobuf:"bytes,2,opt,name=contact"`
	xxx_hidden_Branch        *Branch                `protobuf:"bytes,3,opt,name=branch"`
	xxx_hidden_PurchaseOrder *string                `protobuf:"bytes,4,opt,name=purchase_order,json=purchaseOrder"`
	xxx_hidden_Status        QuoteStatus            `protobuf:"varint,5,opt,name=status,enum=order.v1.QuoteStatus"`
	xxx_hidden_DateCreated   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date_created,json=dateCreated"`
	xxx_hidden_DateExpires   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date_expires,json=dateExpires"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *QuoteSummary) Reset() {
	*x = QuoteSummary{}
	mi := &file_order_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteSummary) ProtoMessage() {}

func (x *QuoteSummary) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QuoteSummary) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *QuoteSummary) GetContact() *Contact {
	if x != nil {
		return x.xxx_hidden_Contact
	}
	return nil
}

func (x *QuoteSummary) GetBranch() *Branch {
	if x != nil {
		return x.xxx_hidden_Branch
	}
	return nil
}

func (x *QuoteSummary) GetPurchaseOrder() string {
	if x != nil {
		if x.xxx_hidden_PurchaseOrder != nil {
			return *x.xxx_hidden_PurchaseOrder
		}
		return ""
	}
	return ""
}

func (x *QuoteSummary) GetStatus() QuoteStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Status
		}
	}
	return QuoteStatus_QUOTE_STATUS_UNSPECIFIED
}

func (x *QuoteSummary) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return nil
}

func (x *QuoteSummary) GetDateExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateExpires
	}
	return nil
}

func (x *QuoteSummary) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *QuoteSummary) SetContact(v *Contact) {
	x.xxx_hidden_Contact = v
}

func (x *QuoteSummary) SetBranch(v *Branch) {
	x.xxx_hidden_Branch = v
}

func (x *QuoteSummary) SetPurchaseOrder(v string) {
	x.xxx_hidden_PurchaseOrder = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *QuoteSummary) SetStatus(v QuoteStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *QuoteSummary) SetDateCreated(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateCreated = v
}

func (x *QuoteSummary) SetDateExpires(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateExpires = v
}

func (x *QuoteSummary) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QuoteSummary) HasContact() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Contact != nil
}

func (x *QuoteSummary) HasBranch() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Branch != nil
}

func (x *QuoteSummary) HasPurchaseOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *QuoteSummary) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *QuoteSummary) HasDateCreated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateCreated != nil
}

func (x *QuoteSummary) HasDateExpires() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateExpires != nil
}

func (x *QuoteSummary) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *QuoteSummary) ClearContact() {
	x.xxx_hidden_Contact = nil
}

func (x *QuoteSummary) ClearBranch() {
	x.xxx_hidden_Branch = nil
}

func (x *QuoteSummary) ClearPurchaseOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PurchaseOrder = nil
}

func (x *QuoteSummary) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Status = QuoteStatus_QUOTE_STATUS_UNSPECIFIED
}

func (x *QuoteSummary) ClearDateCreated() {
	x.xxx_hidden_DateCreated = nil
}

func (x *QuoteSummary) ClearDateExpires() {
	x.xxx_hidden_DateExpires = nil
}

type QuoteSummary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id            *string
	Contact       *Contact
	Branch        *Branch
	PurchaseOrder *string
	Status        *QuoteStatus
	DateCreated   *timestamppb.Timestamp
	DateExpires   *timestamppb.Timestamp
}

func (b0 QuoteSummary_builder) Build() *QuoteSummary {
	m0 := &QuoteSummary{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Contact = b.Contact
	x.xxx_hidden_Branch = b.Branch
	if b.PurchaseOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_PurchaseOrder = b.PurchaseOrder
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Status = *b.Status
	}
	x.xxx_hidden_DateCreated = b.DateCreated
	x.xxx_hidden_DateExpires = b.DateExpires
	return m0
}

type Quote struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id            *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Contact       *Contact               `protobuf:"bytes,2,opt,name=contact"`
	xxx_hidden_Branch        *Branch                `protobuf:"bytes,3,opt,name=branch"`
	xxx_hidden_PurchaseOrder *string                `protobuf:"bytes,4,opt,name=purchase_order,json=purchaseOrder"`
	xxx_hidden_Status        QuoteStatus            `protobuf:"varint,5,opt,name=status,enum=order.v1.QuoteStatus"`
	xxx_hidden_DateCreated   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date_created,json=dateCreated"`
	xxx_hidden_DateExpires   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date_expires,json=dateExpires"`
	xxx_hidden_DateRequested *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=date_requested,json=dateRequested"`
	xxx_hidden_Items         *[]*Quote_Item         `protobuf:"bytes,9,rep,name=items"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Quote) Reset() {
	*x = Quote{}
	mi := &file_order_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Quote) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Quote) GetContact() *Contact {
	if x != nil {
		return x.xxx_hidden_Contact
	}
	return nil
}

func (x *Quote) GetBranch() *Branch {
	if x != nil {
		return x.xxx_hidden_Branch
	}
	return nil
}

func (x *Quote) GetPurchaseOrder() string {
	if x != nil {
		if x.xxx_hidden_PurchaseOrder != nil {
			return *x.xxx_hidden_PurchaseOrder
		}
		return ""
	}
	return ""
}

func (x *Quote) GetStatus() QuoteStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Status
		}
	}
	return QuoteStatus_QUOTE_STATUS_UNSPECIFIED
}

func (x *Quote) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return nil
}

func (x *Quote) GetDateExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateExpires
	}
	return nil
}

func (x *Quote) GetDateRequested() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateRequested
	}
	return nil
}

func (x *Quote) GetItems() []*Quote_Item {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *Quote) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *Quote) SetContact(v *Contact) {
	x.xxx_hidden_Contact = v
}

func (x *Quote) SetBranch(v *Branch) {
	x.xxx_hidden_Branch = v
}

func (x *Quote) SetPurchaseOrder(v string) {
	x.xxx_hidden_PurchaseOrder = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *Quote) SetStatus(v QuoteStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *Quote) SetDateCreated(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateCreated = v
}

func (x *Quote) SetDateExpires(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateExpires = v
}

func (x *Quote) SetDateRequested(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateRequested = v
}

func (x *Quote) SetItems(v []*Quote_Item) {
	x.xxx_hidden_Items = &v
}

func (x *Quote) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Quote) HasContact() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Contact != nil
}

func (x *Quote) HasBranch() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Branch != nil
}

func (x *Quote) HasPurchaseOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Quote) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Quote) HasDateCreated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateCreated != nil
}

func (x *Quote) HasDateExpires() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateExpires != nil
}

func (x *Quote) HasDateRequested() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateRequested != nil
}

func (x *Quote) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Quote) ClearContact() {
	x.xxx_hidden_Contact = nil
}

func (x *Quote) ClearBranch() {
	x.xxx_hidden_Branch = nil
}

func (x *Quote) ClearPurchaseOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PurchaseOrder = nil
}

func (x *Quote) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Status = QuoteStatus_QUOTE_STATUS_UNSPECIFIED
}

func (x *Quote) ClearDateCreated() {
	x.xxx_hidden_DateCreated = nil
}

func (x *Quote) ClearDateExpires() {
	x.xxx_hidden_DateExpires = nil
}

func (x *Quote) ClearDateRequested() {
	x.xxx_hidden_DateRequested = nil
}

type Quote_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id            *string
	Contact       *Contact
	Branch        *Branch
	PurchaseOrder *string
	Status        *QuoteStatus
	DateCreated   *timestamppb.Timestamp
	DateExpires   *timestamppb.Timestamp
	DateRequested *timestamppb.Timestamp
	Items         []*Quote_Item
}

func (b0 Quote_builder) Build() *Quote {
	m0 := &Quote{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Contact = b.Contact
	x.xxx_hidden_Branch = b.Branch
	if b.PurchaseOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_PurchaseOrder = b.PurchaseOrder
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_Status = *b.Status
	}
	x.xxx_hidden_DateCreated = b.DateCreated
	x.xxx_hidden_DateExpires = b.DateExpires
	x.xxx_hidden_DateRequested = b.DateRequested
	x.xxx_hidden_Items = &b.Items
	return m0
}

type OrderSummary struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id            *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ContactId     *string                `protobuf:"bytes,2,opt,name=contact_id,json=contactId"`
	xxx_hidden_BranchId      *string                `protobuf:"bytes,3,opt,name=branch_id,json=branchId"`
	xxx_hidden_PurchaseOrder *string                `protobuf:"bytes,4,opt,name=purchase_order,json=purchaseOrder"`
	xxx_hidden_Status        OrderStatus            `protobuf:"varint,5,opt,name=status,enum=order.v1.OrderStatus"`
	xxx_hidden_DateCreated   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date_created,json=dateCreated"`
	xxx_hidden_DateRequested *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date_requested,json=dateRequested"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *OrderSummary) Reset() {
	*x = OrderSummary{}
	mi := &file_order_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSummary) ProtoMessage() {}

func (x *OrderSummary) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OrderSummary) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *OrderSummary) GetContactId() string {
	if x != nil {
		if x.xxx_hidden_ContactId != nil {
			return *x.xxx_hidden_ContactId
		}
		return ""
	}
	return ""
}

func (x *OrderSummary) GetBranchId() string {
	if x != nil {
		if x.xxx_hidden_BranchId != nil {
			return *x.xxx_hidden_BranchId
		}
		return ""
	}
	return ""
}

func (x *OrderSummary) GetPurchaseOrder() string {
	if x != nil {
		if x.xxx_hidden_PurchaseOrder != nil {
			return *x.xxx_hidden_PurchaseOrder
		}
		return ""
	}
	return ""
}

func (x *OrderSummary) GetStatus() OrderStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Status
		}
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *OrderSummary) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return nil
}

func (x *OrderSummary) GetDateRequested() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateRequested
	}
	return nil
}

func (x *OrderSummary) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *OrderSummary) SetContactId(v string) {
	x.xxx_hidden_ContactId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *OrderSummary) SetBranchId(v string) {
	x.xxx_hidden_BranchId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *OrderSummary) SetPurchaseOrder(v string) {
	x.xxx_hidden_PurchaseOrder = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *OrderSummary) SetStatus(v OrderStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *OrderSummary) SetDateCreated(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateCreated = v
}

func (x *OrderSummary) SetDateRequested(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateRequested = v
}

func (x *OrderSummary) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OrderSummary) HasContactId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OrderSummary) HasBranchId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *OrderSummary) HasPurchaseOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *OrderSummary) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *OrderSummary) HasDateCreated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateCreated != nil
}

func (x *OrderSummary) HasDateRequested() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateRequested != nil
}

func (x *OrderSummary) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *OrderSummary) ClearContactId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ContactId = nil
}

func (x *OrderSummary) ClearBranchId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BranchId = nil
}

func (x *OrderSummary) ClearPurchaseOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PurchaseOrder = nil
}

func (x *OrderSummary) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Status = OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *OrderSummary) ClearDateCreated() {
	x.xxx_hidden_DateCreated = nil
}

func (x *OrderSummary) ClearDateRequested() {
	x.xxx_hidden_DateRequested = nil
}

type OrderSummary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id            *string
	ContactId     *string
	BranchId      *string
	PurchaseOrder *string
	Status        *OrderStatus
	DateCreated   *timestamppb.Timestamp
	DateRequested *timestamppb.Timestamp
}

func (b0 OrderSummary_builder) Build() *OrderSummary {
	m0 := &OrderSummary{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = b.Id
	}
	if b.ContactId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_ContactId = b.ContactId
	}
	if b.BranchId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_BranchId = b.BranchId
	}
	if b.PurchaseOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_PurchaseOrder = b.PurchaseOrder
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Status = *b.Status
	}
	x.xxx_hidden_DateCreated = b.DateCreated
	x.xxx_hidden_DateRequested = b.DateRequested
	return m0
}

type Order struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id              *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ContactId       *string                `protobuf:"bytes,2,opt,name=contact_id,json=contactId"`
	xxx_hidden_BranchId        *string                `protobuf:"bytes,3,opt,name=branch_id,json=branchId"`
	xxx_hidden_PurchaseOrder   *string                `protobuf:"bytes,4,opt,name=purchase_order,json=purchaseOrder"`
	xxx_hidden_Status          OrderStatus            `protobuf:"varint,5,opt,name=status,enum=order.v1.OrderStatus"`
	xxx_hidden_DateCreated     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date_created,json=dateCreated"`
	xxx_hidden_DateRequested   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date_requested,json=dateRequested"`
	xxx_hidden_OrderItems      *[]*Order_Item         `protobuf:"bytes,8,rep,name=order_items,json=orderItems"`
	xxx_hidden_ShippingAddress *Address               `protobuf:"bytes,9,opt,name=shipping_address,json=shippingAddress"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_order_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Order) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Order) GetContactId() string {
	if x != nil {
		if x.xxx_hidden_ContactId != nil {
			return *x.xxx_hidden_ContactId
		}
		return ""
	}
	return ""
}

func (x *Order) GetBranchId() string {
	if x != nil {
		if x.xxx_hidden_BranchId != nil {
			return *x.xxx_hidden_BranchId
		}
		return ""
	}
	return ""
}

func (x *Order) GetPurchaseOrder() string {
	if x != nil {
		if x.xxx_hidden_PurchaseOrder != nil {
			return *x.xxx_hidden_PurchaseOrder
		}
		return ""
	}
	return ""
}

func (x *Order) GetStatus() OrderStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Status
		}
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *Order) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return nil
}

func (x *Order) GetDateRequested() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateRequested
	}
	return nil
}

func (x *Order) GetOrderItems() []*Order_Item {
	if x != nil {
		if x.xxx_hidden_OrderItems != nil {
			return *x.xxx_hidden_OrderItems
		}
	}
	return nil
}

func (x *Order) GetShippingAddress() *Address {
	if x != nil {
		return x.xxx_hidden_ShippingAddress
	}
	return nil
}

func (x *Order) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *Order) SetContactId(v string) {
	x.xxx_hidden_ContactId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *Order) SetBranchId(v string) {
	x.xxx_hidden_BranchId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *Order) SetPurchaseOrder(v string) {
	x.xxx_hidden_PurchaseOrder = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *Order) SetStatus(v OrderStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *Order) SetDateCreated(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateCreated = v
}

func (x *Order) SetDateRequested(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateRequested = v
}

func (x *Order) SetOrderItems(v []*Order_Item) {
	x.xxx_hidden_OrderItems = &v
}

func (x *Order) SetShippingAddress(v *Address) {
	x.xxx_hidden_ShippingAddress = v
}

func (x *Order) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Order) HasContactId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Order) HasBranchId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Order) HasPurchaseOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Order) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Order) HasDateCreated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateCreated != nil
}

func (x *Order) HasDateRequested() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateRequested != nil
}

func (x *Order) HasShippingAddress() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ShippingAddress != nil
}

func (x *Order) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Order) ClearContactId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ContactId = nil
}

func (x *Order) ClearBranchId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BranchId = nil
}

func (x *Order) ClearPurchaseOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PurchaseOrder = nil
}

func (x *Order) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Status = OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *Order) ClearDateCreated() {
	x.xxx_hidden_DateCreated = nil
}

func (x *Order) ClearDateRequested() {
	x.xxx_hidden_DateRequested = nil
}

func (x *Order) ClearShippingAddress() {
	x.xxx_hidden_ShippingAddress = nil
}

type Order_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id              *string
	ContactId       *string
	BranchId        *string
	PurchaseOrder   *string
	Status          *OrderStatus
	DateCreated     *timestamppb.Timestamp
	DateRequested   *timestamppb.Timestamp
	OrderItems      []*Order_Item
	ShippingAddress *Address
}

func (b0 Order_builder) Build() *Order {
	m0 := &Order{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.ContactId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_ContactId = b.ContactId
	}
	if b.BranchId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_BranchId = b.BranchId
	}
	if b.PurchaseOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_PurchaseOrder = b.PurchaseOrder
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_Status = *b.Status
	}
	x.xxx_hidden_DateCreated = b.DateCreated
	x.xxx_hidden_DateRequested = b.DateRequested
	x.xxx_hidden_OrderItems = &b.OrderItems
	x.xxx_hidden_ShippingAddress = b.ShippingAddress
	return m0
}

type Shipment struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                   *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_CarrierName          *string                `protobuf:"bytes,2,opt,name=carrier_name,json=carrierName"`
	xxx_hidden_CarrierTracking      *string                `protobuf:"bytes,3,opt,name=carrier_tracking,json=carrierTracking"`
	xxx_hidden_ShippingAddress      *Address               `protobuf:"bytes,4,opt,name=shipping_address,json=shippingAddress"`
	xxx_hidden_DeliveryInstructions *string                `protobuf:"bytes,5,opt,name=delivery_instructions,json=deliveryInstructions"`
	xxx_hidden_OrderId              *string                `protobuf:"bytes,6,opt,name=order_id,json=orderId"`
	xxx_hidden_OrderPurchaseOrder   *string                `protobuf:"bytes,7,opt,name=order_purchase_order,json=orderPurchaseOrder"`
	xxx_hidden_Contact              *Contact               `protobuf:"bytes,8,opt,name=contact"`
	xxx_hidden_Customer             *Customer              `protobuf:"bytes,9,opt,name=customer"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *Shipment) Reset() {
	*x = Shipment{}
	mi := &file_order_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Shipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shipment) ProtoMessage() {}

func (x *Shipment) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Shipment) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Shipment) GetCarrierName() string {
	if x != nil {
		if x.xxx_hidden_CarrierName != nil {
			return *x.xxx_hidden_CarrierName
		}
		return ""
	}
	return ""
}

func (x *Shipment) GetCarrierTracking() string {
	if x != nil {
		if x.xxx_hidden_CarrierTracking != nil {
			return *x.xxx_hidden_CarrierTracking
		}
		return ""
	}
	return ""
}

func (x *Shipment) GetShippingAddress() *Address {
	if x != nil {
		return x.xxx_hidden_ShippingAddress
	}
	return nil
}

func (x *Shipment) GetDeliveryInstructions() string {
	if x != nil {
		if x.xxx_hidden_DeliveryInstructions != nil {
			return *x.xxx_hidden_DeliveryInstructions
		}
		return ""
	}
	return ""
}

func (x *Shipment) GetOrderId() string {
	if x != nil {
		if x.xxx_hidden_OrderId != nil {
			return *x.xxx_hidden_OrderId
		}
		return ""
	}
	return ""
}

func (x *Shipment) GetOrderPurchaseOrder() string {
	if x != nil {
		if x.xxx_hidden_OrderPurchaseOrder != nil {
			return *x.xxx_hidden_OrderPurchaseOrder
		}
		return ""
	}
	return ""
}

func (x *Shipment) GetContact() *Contact {
	if x != nil {
		return x.xxx_hidden_Contact
	}
	return nil
}

func (x *Shipment) GetCustomer() *Customer {
	if x != nil {
		return x.xxx_hidden_Customer
	}
	return nil
}

func (x *Shipment) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *Shipment) SetCarrierName(v string) {
	x.xxx_hidden_CarrierName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *Shipment) SetCarrierTracking(v string) {
	x.xxx_hidden_CarrierTracking = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *Shipment) SetShippingAddress(v *Address) {
	x.xxx_hidden_ShippingAddress = v
}

func (x *Shipment) SetDeliveryInstructions(v string) {
	x.xxx_hidden_DeliveryInstructions = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *Shipment) SetOrderId(v string) {
	x.xxx_hidden_OrderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *Shipment) SetOrderPurchaseOrder(v string) {
	x.xxx_hidden_OrderPurchaseOrder = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *Shipment) SetContact(v *Contact) {
	x.xxx_hidden_Contact = v
}

func (x *Shipment) SetCustomer(v *Customer) {
	x.xxx_hidden_Customer = v
}

func (x *Shipment) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Shipment) HasCarrierName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Shipment) HasCarrierTracking() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Shipment) HasShippingAddress() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ShippingAddress != nil
}

func (x *Shipment) HasDeliveryInstructions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Shipment) HasOrderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Shipment) HasOrderPurchaseOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Shipment) HasContact() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Contact != nil
}

func (x *Shipment) HasCustomer() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Customer != nil
}

func (x *Shipment) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Shipment) ClearCarrierName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CarrierName = nil
}

func (x *Shipment) ClearCarrierTracking() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CarrierTracking = nil
}

func (x *Shipment) ClearShippingAddress() {
	x.xxx_hidden_ShippingAddress = nil
}

func (x *Shipment) ClearDeliveryInstructions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DeliveryInstructions = nil
}

func (x *Shipment) ClearOrderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_OrderId = nil
}

func (x *Shipment) ClearOrderPurchaseOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_OrderPurchaseOrder = nil
}

func (x *Shipment) ClearContact() {
	x.xxx_hidden_Contact = nil
}

func (x *Shipment) ClearCustomer() {
	x.xxx_hidden_Customer = nil
}

type Shipment_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                   *string
	CarrierName          *string
	CarrierTracking      *string
	ShippingAddress      *Address
	DeliveryInstructions *string
	OrderId              *string
	OrderPurchaseOrder   *string
	Contact              *Contact
	Customer             *Customer
}

func (b0 Shipment_builder) Build() *Shipment {
	m0 := &Shipment{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.CarrierName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_CarrierName = b.CarrierName
	}
	if b.CarrierTracking != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_CarrierTracking = b.CarrierTracking
	}
	x.xxx_hidden_ShippingAddress = b.ShippingAddress
	if b.DeliveryInstructions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_DeliveryInstructions = b.DeliveryInstructions
	}
	if b.OrderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_OrderId = b.OrderId
	}
	if b.OrderPurchaseOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_OrderPurchaseOrder = b.OrderPurchaseOrder
	}
	x.xxx_hidden_Contact = b.Contact
	x.xxx_hidden_Customer = b.Customer
	return m0
}

type Address struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_LineOne     *string                `protobuf:"bytes,3,opt,name=line_one,json=lineOne"`
	xxx_hidden_LineTwo     *string                `protobuf:"bytes,4,opt,name=line_two,json=lineTwo"`
	xxx_hidden_City        *string                `protobuf:"bytes,5,opt,name=city"`
	xxx_hidden_State       *string                `protobuf:"bytes,6,opt,name=state"`
	xxx_hidden_PostalCode  *string                `protobuf:"bytes,7,opt,name=postal_code,json=postalCode"`
	xxx_hidden_Country     *string                `protobuf:"bytes,8,opt,name=country"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_order_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Address) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Address) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Address) GetLineOne() string {
	if x != nil {
		if x.xxx_hidden_LineOne != nil {
			return *x.xxx_hidden_LineOne
		}
		return ""
	}
	return ""
}

func (x *Address) GetLineTwo() string {
	if x != nil {
		if x.xxx_hidden_LineTwo != nil {
			return *x.xxx_hidden_LineTwo
		}
		return ""
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		if x.xxx_hidden_City != nil {
			return *x.xxx_hidden_City
		}
		return ""
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		if x.xxx_hidden_State != nil {
			return *x.xxx_hidden_State
		}
		return ""
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		if x.xxx_hidden_PostalCode != nil {
			return *x.xxx_hidden_PostalCode
		}
		return ""
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		if x.xxx_hidden_Country != nil {
			return *x.xxx_hidden_Country
		}
		return ""
	}
	return ""
}

func (x *Address) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *Address) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *Address) SetLineOne(v string) {
	x.xxx_hidden_LineOne = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *Address) SetLineTwo(v string) {
	x.xxx_hidden_LineTwo = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *Address) SetCity(v string) {
	x.xxx_hidden_City = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *Address) SetState(v string) {
	x.xxx_hidden_State = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *Address) SetPostalCode(v string) {
	x.xxx_hidden_PostalCode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *Address) SetCountry(v string) {
	x.xxx_hidden_Country = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *Address) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Address) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Address) HasLineOne() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Address) HasLineTwo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Address) HasCity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Address) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Address) HasPostalCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Address) HasCountry() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Address) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Address) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Address) ClearLineOne() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_LineOne = nil
}

func (x *Address) ClearLineTwo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_LineTwo = nil
}

func (x *Address) ClearCity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_City = nil
}

func (x *Address) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_State = nil
}

func (x *Address) ClearPostalCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_PostalCode = nil
}

func (x *Address) ClearCountry() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Country = nil
}

type Address_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id         *string
	Name       *string
	LineOne    *string
	LineTwo    *string
	City       *string
	State      *string
	PostalCode *string
	Country    *string
}

func (b0 Address_builder) Build() *Address {
	m0 := &Address{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_Name = b.Name
	}
	if b.LineOne != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_LineOne = b.LineOne
	}
	if b.LineTwo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_LineTwo = b.LineTwo
	}
	if b.City != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_City = b.City
	}
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_State = b.State
	}
	if b.PostalCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_PostalCode = b.PostalCode
	}
	if b.Country != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_Country = b.Country
	}
	return m0
}

type PackingListSummary struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InvoiceId    *string                `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId"`
	xxx_hidden_OrderId      *string                `protobuf:"bytes,2,opt,name=order_id,json=orderId"`
	xxx_hidden_DateInvoiced *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_invoiced,json=dateInvoiced"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PackingListSummary) Reset() {
	*x = PackingListSummary{}
	mi := &file_order_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackingListSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackingListSummary) ProtoMessage() {}

func (x *PackingListSummary) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PackingListSummary) GetInvoiceId() string {
	if x != nil {
		if x.xxx_hidden_InvoiceId != nil {
			return *x.xxx_hidden_InvoiceId
		}
		return ""
	}
	return ""
}

func (x *PackingListSummary) GetOrderId() string {
	if x != nil {
		if x.xxx_hidden_OrderId != nil {
			return *x.xxx_hidden_OrderId
		}
		return ""
	}
	return ""
}

func (x *PackingListSummary) GetDateInvoiced() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateInvoiced
	}
	return nil
}

func (x *PackingListSummary) SetInvoiceId(v string) {
	x.xxx_hidden_InvoiceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *PackingListSummary) SetOrderId(v string) {
	x.xxx_hidden_OrderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *PackingListSummary) SetDateInvoiced(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateInvoiced = v
}

func (x *PackingListSummary) HasInvoiceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PackingListSummary) HasOrderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PackingListSummary) HasDateInvoiced() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateInvoiced != nil
}

func (x *PackingListSummary) ClearInvoiceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_InvoiceId = nil
}

func (x *PackingListSummary) ClearOrderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OrderId = nil
}

func (x *PackingListSummary) ClearDateInvoiced() {
	x.xxx_hidden_DateInvoiced = nil
}

type PackingListSummary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	InvoiceId    *string
	OrderId      *string
	DateInvoiced *timestamppb.Timestamp
}

func (b0 PackingListSummary_builder) Build() *PackingListSummary {
	m0 := &PackingListSummary{}
	b, x := &b0, m0
	_, _ = b, x
	if b.InvoiceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_InvoiceId = b.InvoiceId
	}
	if b.OrderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_OrderId = b.OrderId
	}
	x.xxx_hidden_DateInvoiced = b.DateInvoiced
	return m0
}

type PackingList struct {
	state                             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InvoiceId              *string                `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId"`
	xxx_hidden_OrderId                *string                `protobuf:"bytes,2,opt,name=order_id,json=orderId"`
	xxx_hidden_PurchaseOrder          *string                `protobuf:"bytes,3,opt,name=purchase_order,json=purchaseOrder"`
	xxx_hidden_CustomerId             *string                `protobuf:"bytes,4,opt,name=customer_id,json=customerId"`
	xxx_hidden_DateInvoiced           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date_invoiced,json=dateInvoiced"`
	xxx_hidden_DateOrdered            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date_ordered,json=dateOrdered"`
	xxx_hidden_SalesRepName           *string                `protobuf:"bytes,7,opt,name=sales_rep_name,json=salesRepName"`
	xxx_hidden_TakerName              *string                `protobuf:"bytes,8,opt,name=taker_name,json=takerName"`
	xxx_hidden_BillingAddress         *Address               `protobuf:"bytes,9,opt,name=billing_address,json=billingAddress"`
	xxx_hidden_BillingContact         *string                `protobuf:"bytes,10,opt,name=billing_contact,json=billingContact"`
	xxx_hidden_ShippingAddress        *Address               `protobuf:"bytes,11,opt,name=shipping_address,json=shippingAddress"`
	xxx_hidden_ShippingContact        *string                `protobuf:"bytes,12,opt,name=shipping_contact,json=shippingContact"`
	xxx_hidden_ShippingContactEmail   *string                `protobuf:"bytes,13,opt,name=shipping_contact_email,json=shippingContactEmail"`
	xxx_hidden_ShipmentId             *string                `protobuf:"bytes,14,opt,name=shipment_id,json=shipmentId"`
	xxx_hidden_ShipmentCarrier        *string                `protobuf:"bytes,15,opt,name=shipment_carrier,json=shipmentCarrier"`
	xxx_hidden_ShipmentTrackingNumber *string                `protobuf:"bytes,16,opt,name=shipment_tracking_number,json=shipmentTrackingNumber"`
	xxx_hidden_DeliveryInstructions   *string                `protobuf:"bytes,17,opt,name=delivery_instructions,json=deliveryInstructions"`
	xxx_hidden_Terms                  *string                `protobuf:"bytes,18,opt,name=terms"`
	xxx_hidden_TermsDueDate           *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=terms_due_date,json=termsDueDate"`
	xxx_hidden_TermsDiscountTotal     float64                `protobuf:"fixed64,20,opt,name=terms_discount_total,json=termsDiscountTotal"`
	xxx_hidden_TermsDiscountDueDate   *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=terms_discount_due_date,json=termsDiscountDueDate"`
	xxx_hidden_Items                  *[]*PackingList_Item   `protobuf:"bytes,30,rep,name=items"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *PackingList) Reset() {
	*x = PackingList{}
	mi := &file_order_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackingList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackingList) ProtoMessage() {}

func (x *PackingList) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PackingList) GetInvoiceId() string {
	if x != nil {
		if x.xxx_hidden_InvoiceId != nil {
			return *x.xxx_hidden_InvoiceId
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetOrderId() string {
	if x != nil {
		if x.xxx_hidden_OrderId != nil {
			return *x.xxx_hidden_OrderId
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetPurchaseOrder() string {
	if x != nil {
		if x.xxx_hidden_PurchaseOrder != nil {
			return *x.xxx_hidden_PurchaseOrder
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetCustomerId() string {
	if x != nil {
		if x.xxx_hidden_CustomerId != nil {
			return *x.xxx_hidden_CustomerId
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetDateInvoiced() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateInvoiced
	}
	return nil
}

func (x *PackingList) GetDateOrdered() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateOrdered
	}
	return nil
}

func (x *PackingList) GetSalesRepName() string {
	if x != nil {
		if x.xxx_hidden_SalesRepName != nil {
			return *x.xxx_hidden_SalesRepName
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetTakerName() string {
	if x != nil {
		if x.xxx_hidden_TakerName != nil {
			return *x.xxx_hidden_TakerName
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetBillingAddress() *Address {
	if x != nil {
		return x.xxx_hidden_BillingAddress
	}
	return nil
}

func (x *PackingList) GetBillingContact() string {
	if x != nil {
		if x.xxx_hidden_BillingContact != nil {
			return *x.xxx_hidden_BillingContact
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetShippingAddress() *Address {
	if x != nil {
		return x.xxx_hidden_ShippingAddress
	}
	return nil
}

func (x *PackingList) GetShippingContact() string {
	if x != nil {
		if x.xxx_hidden_ShippingContact != nil {
			return *x.xxx_hidden_ShippingContact
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetShippingContactEmail() string {
	if x != nil {
		if x.xxx_hidden_ShippingContactEmail != nil {
			return *x.xxx_hidden_ShippingContactEmail
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetShipmentId() string {
	if x != nil {
		if x.xxx_hidden_ShipmentId != nil {
			return *x.xxx_hidden_ShipmentId
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetShipmentCarrier() string {
	if x != nil {
		if x.xxx_hidden_ShipmentCarrier != nil {
			return *x.xxx_hidden_ShipmentCarrier
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetShipmentTrackingNumber() string {
	if x != nil {
		if x.xxx_hidden_ShipmentTrackingNumber != nil {
			return *x.xxx_hidden_ShipmentTrackingNumber
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetDeliveryInstructions() string {
	if x != nil {
		if x.xxx_hidden_DeliveryInstructions != nil {
			return *x.xxx_hidden_DeliveryInstructions
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetTerms() string {
	if x != nil {
		if x.xxx_hidden_Terms != nil {
			return *x.xxx_hidden_Terms
		}
		return ""
	}
	return ""
}

func (x *PackingList) GetTermsDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_TermsDueDate
	}
	return nil
}

func (x *PackingList) GetTermsDiscountTotal() float64 {
	if x != nil {
		return x.xxx_hidden_TermsDiscountTotal
	}
	return 0
}

func (x *PackingList) GetTermsDiscountDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_TermsDiscountDueDate
	}
	return nil
}

func (x *PackingList) GetItems() []*PackingList_Item {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *PackingList) SetInvoiceId(v string) {
	x.xxx_hidden_InvoiceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 22)
}

func (x *PackingList) SetOrderId(v string) {
	x.xxx_hidden_OrderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 22)
}

func (x *PackingList) SetPurchaseOrder(v string) {
	x.xxx_hidden_PurchaseOrder = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 22)
}

func (x *PackingList) SetCustomerId(v string) {
	x.xxx_hidden_CustomerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 22)
}

func (x *PackingList) SetDateInvoiced(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateInvoiced = v
}

func (x *PackingList) SetDateOrdered(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateOrdered = v
}

func (x *PackingList) SetSalesRepName(v string) {
	x.xxx_hidden_SalesRepName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 22)
}

func (x *PackingList) SetTakerName(v string) {
	x.xxx_hidden_TakerName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 22)
}

func (x *PackingList) SetBillingAddress(v *Address) {
	x.xxx_hidden_BillingAddress = v
}

func (x *PackingList) SetBillingContact(v string) {
	x.xxx_hidden_BillingContact = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 22)
}

func (x *PackingList) SetShippingAddress(v *Address) {
	x.xxx_hidden_ShippingAddress = v
}

func (x *PackingList) SetShippingContact(v string) {
	x.xxx_hidden_ShippingContact = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 22)
}

func (x *PackingList) SetShippingContactEmail(v string) {
	x.xxx_hidden_ShippingContactEmail = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 22)
}

func (x *PackingList) SetShipmentId(v string) {
	x.xxx_hidden_ShipmentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 22)
}

func (x *PackingList) SetShipmentCarrier(v string) {
	x.xxx_hidden_ShipmentCarrier = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 22)
}

func (x *PackingList) SetShipmentTrackingNumber(v string) {
	x.xxx_hidden_ShipmentTrackingNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 22)
}

func (x *PackingList) SetDeliveryInstructions(v string) {
	x.xxx_hidden_DeliveryInstructions = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 22)
}

func (x *PackingList) SetTerms(v string) {
	x.xxx_hidden_Terms = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 17, 22)
}

func (x *PackingList) SetTermsDueDate(v *timestamppb.Timestamp) {
	x.xxx_hidden_TermsDueDate = v
}

func (x *PackingList) SetTermsDiscountTotal(v float64) {
	x.xxx_hidden_TermsDiscountTotal = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 19, 22)
}

func (x *PackingList) SetTermsDiscountDueDate(v *timestamppb.Timestamp) {
	x.xxx_hidden_TermsDiscountDueDate = v
}

func (x *PackingList) SetItems(v []*PackingList_Item) {
	x.xxx_hidden_Items = &v
}

func (x *PackingList) HasInvoiceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PackingList) HasOrderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PackingList) HasPurchaseOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PackingList) HasCustomerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PackingList) HasDateInvoiced() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateInvoiced != nil
}

func (x *PackingList) HasDateOrdered() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateOrdered != nil
}

func (x *PackingList) HasSalesRepName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *PackingList) HasTakerName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *PackingList) HasBillingAddress() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BillingAddress != nil
}

func (x *PackingList) HasBillingContact() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *PackingList) HasShippingAddress() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ShippingAddress != nil
}

func (x *PackingList) HasShippingContact() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *PackingList) HasShippingContactEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *PackingList) HasShipmentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *PackingList) HasShipmentCarrier() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *PackingList) HasShipmentTrackingNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *PackingList) HasDeliveryInstructions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *PackingList) HasTerms() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 17)
}

func (x *PackingList) HasTermsDueDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TermsDueDate != nil
}

func (x *PackingList) HasTermsDiscountTotal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 19)
}

func (x *PackingList) HasTermsDiscountDueDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TermsDiscountDueDate != nil
}

func (x *PackingList) ClearInvoiceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_InvoiceId = nil
}

func (x *PackingList) ClearOrderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OrderId = nil
}

func (x *PackingList) ClearPurchaseOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PurchaseOrder = nil
}

func (x *PackingList) ClearCustomerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CustomerId = nil
}

func (x *PackingList) ClearDateInvoiced() {
	x.xxx_hidden_DateInvoiced = nil
}

func (x *PackingList) ClearDateOrdered() {
	x.xxx_hidden_DateOrdered = nil
}

func (x *PackingList) ClearSalesRepName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_SalesRepName = nil
}

func (x *PackingList) ClearTakerName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_TakerName = nil
}

func (x *PackingList) ClearBillingAddress() {
	x.xxx_hidden_BillingAddress = nil
}

func (x *PackingList) ClearBillingContact() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_BillingContact = nil
}

func (x *PackingList) ClearShippingAddress() {
	x.xxx_hidden_ShippingAddress = nil
}

func (x *PackingList) ClearShippingContact() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_ShippingContact = nil
}

func (x *PackingList) ClearShippingContactEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_ShippingContactEmail = nil
}

func (x *PackingList) ClearShipmentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_ShipmentId = nil
}

func (x *PackingList) ClearShipmentCarrier() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_ShipmentCarrier = nil
}

func (x *PackingList) ClearShipmentTrackingNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_ShipmentTrackingNumber = nil
}

func (x *PackingList) ClearDeliveryInstructions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_DeliveryInstructions = nil
}

func (x *PackingList) ClearTerms() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 17)
	x.xxx_hidden_Terms = nil
}

func (x *PackingList) ClearTermsDueDate() {
	x.xxx_hidden_TermsDueDate = nil
}

func (x *PackingList) ClearTermsDiscountTotal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 19)
	x.xxx_hidden_TermsDiscountTotal = 0
}

func (x *PackingList) ClearTermsDiscountDueDate() {
	x.xxx_hidden_TermsDiscountDueDate = nil
}

type PackingList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	InvoiceId              *string
	OrderId                *string
	PurchaseOrder          *string
	CustomerId             *string
	DateInvoiced           *timestamppb.Timestamp
	DateOrdered            *timestamppb.Timestamp
	SalesRepName           *string
	TakerName              *string
	BillingAddress         *Address
	BillingContact         *string
	ShippingAddress        *Address
	ShippingContact        *string
	ShippingContactEmail   *string
	ShipmentId             *string
	ShipmentCarrier        *string
	ShipmentTrackingNumber *string
	DeliveryInstructions   *string
	Terms                  *string
	TermsDueDate           *timestamppb.Timestamp
	TermsDiscountTotal     *float64
	TermsDiscountDueDate   *timestamppb.Timestamp
	Items                  []*PackingList_Item
}

func (b0 PackingList_builder) Build() *PackingList {
	m0 := &PackingList{}
	b, x := &b0, m0
	_, _ = b, x
	if b.InvoiceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 22)
		x.xxx_hidden_InvoiceId = b.InvoiceId
	}
	if b.OrderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 22)
		x.xxx_hidden_OrderId = b.OrderId
	}
	if b.PurchaseOrder != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 22)
		x.xxx_hidden_PurchaseOrder = b.PurchaseOrder
	}
	if b.CustomerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 22)
		x.xxx_hidden_CustomerId = b.CustomerId
	}
	x.xxx_hidden_DateInvoiced = b.DateInvoiced
	x.xxx_hidden_DateOrdered = b.DateOrdered
	if b.SalesRepName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 22)
		x.xxx_hidden_SalesRepName = b.SalesRepName
	}
	if b.TakerName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 22)
		x.xxx_hidden_TakerName = b.TakerName
	}
	x.xxx_hidden_BillingAddress = b.BillingAddress
	if b.BillingContact != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 22)
		x.xxx_hidden_BillingContact = b.BillingContact
	}
	x.xxx_hidden_ShippingAddress = b.ShippingAddress
	if b.ShippingContact != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 22)
		x.xxx_hidden_ShippingContact = b.ShippingContact
	}
	if b.ShippingContactEmail != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 22)
		x.xxx_hidden_ShippingContactEmail = b.ShippingContactEmail
	}
	if b.ShipmentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 22)
		x.xxx_hidden_ShipmentId = b.ShipmentId
	}
	if b.ShipmentCarrier != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 22)
		x.xxx_hidden_ShipmentCarrier = b.ShipmentCarrier
	}
	if b.ShipmentTrackingNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 22)
		x.xxx_hidden_ShipmentTrackingNumber = b.ShipmentTrackingNumber
	}
	if b.DeliveryInstructions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 22)
		x.xxx_hidden_DeliveryInstructions = b.DeliveryInstructions
	}
	if b.Terms != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 17, 22)
		x.xxx_hidden_Terms = b.Terms
	}
	x.xxx_hidden_TermsDueDate = b.TermsDueDate
	if b.TermsDiscountTotal != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 19, 22)
		x.xxx_hidden_TermsDiscountTotal = *b.TermsDiscountTotal
	}
	x.xxx_hidden_TermsDiscountDueDate = b.TermsDiscountDueDate
	x.xxx_hidden_Items = &b.Items
	return m0
}

type ListOrdersRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BranchId    *string                `protobuf:"bytes,1,opt,name=branch_id,json=branchId"`
	xxx_hidden_PageSize    int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize"`
	xxx_hidden_Page        int32                  `protobuf:"varint,3,opt,name=page"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListOrdersRequest) Reset() {
	*x = ListOrdersRequest{}
	mi := &file_order_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrdersRequest) ProtoMessage() {}

func (x *ListOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOrdersRequest) GetBranchId() string {
	if x != nil {
		if x.xxx_hidden_BranchId != nil {
			return *x.xxx_hidden_BranchId
		}
		return ""
	}
	return ""
}

func (x *ListOrdersRequest) GetPageSize() int32 {
	if x != nil {
		return x.xxx_hidden_PageSize
	}
	return 0
}

func (x *ListOrdersRequest) GetPage() int32 {
	if x != nil {
		return x.xxx_hidden_Page
	}
	return 0
}

func (x *ListOrdersRequest) SetBranchId(v string) {
	x.xxx_hidden_BranchId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ListOrdersRequest) SetPageSize(v int32) {
	x.xxx_hidden_PageSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListOrdersRequest) SetPage(v int32) {
	x.xxx_hidden_Page = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListOrdersRequest) HasBranchId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListOrdersRequest) HasPageSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListOrdersRequest) HasPage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListOrdersRequest) ClearBranchId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BranchId = nil
}

func (x *ListOrdersRequest) ClearPageSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PageSize = 0
}

func (x *ListOrdersRequest) ClearPage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Page = 0
}

type ListOrdersRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BranchId *string
	// Results to display on a page
	PageSize *int32
	// Currently selected page
	Page *int32
}

func (b0 ListOrdersRequest_builder) Build() *ListOrdersRequest {
	m0 := &ListOrdersRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BranchId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_BranchId = b.BranchId
	}
	if b.PageSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_PageSize = *b.PageSize
	}
	if b.Page != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Page = *b.Page
	}
	return m0
}

type ListOrdersResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Orders       *[]*OrderSummary       `protobuf:"bytes,1,rep,name=orders"`
	xxx_hidden_TotalRecords int32                  `protobuf:"varint,2,opt,name=total_records,json=totalRecords"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListOrdersResponse) Reset() {
	*x = ListOrdersResponse{}
	mi := &file_order_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrdersResponse) ProtoMessage() {}

func (x *ListOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOrdersResponse) GetOrders() []*OrderSummary {
	if x != nil {
		if x.xxx_hidden_Orders != nil {
			return *x.xxx_hidden_Orders
		}
	}
	return nil
}

func (x *ListOrdersResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.xxx_hidden_TotalRecords
	}
	return 0
}

func (x *ListOrdersResponse) SetOrders(v []*OrderSummary) {
	x.xxx_hidden_Orders = &v
}

func (x *ListOrdersResponse) SetTotalRecords(v int32) {
	x.xxx_hidden_TotalRecords = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListOrdersResponse) HasTotalRecords() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListOrdersResponse) ClearTotalRecords() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalRecords = 0
}

type ListOrdersResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Orders       []*OrderSummary
	TotalRecords *int32
}

func (b0 ListOrdersResponse_builder) Build() *ListOrdersResponse {
	m0 := &ListOrdersResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Orders = &b.Orders
	if b.TotalRecords != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TotalRecords = *b.TotalRecords
	}
	return m0
}

type GetOrderRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	mi := &file_order_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetOrderRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetOrderRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetOrderRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetOrderRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type GetOrderRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 GetOrderRequest_builder) Build() *GetOrderRequest {
	m0 := &GetOrderRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type GetOrderResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Order *Order                 `protobuf:"bytes,1,opt,name=order"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	mi := &file_order_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetOrderResponse) GetOrder() *Order {
	if x != nil {
		return x.xxx_hidden_Order
	}
	return nil
}

func (x *GetOrderResponse) SetOrder(v *Order) {
	x.xxx_hidden_Order = v
}

func (x *GetOrderResponse) HasOrder() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Order != nil
}

func (x *GetOrderResponse) ClearOrder() {
	x.xxx_hidden_Order = nil
}

type GetOrderResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Order *Order
}

func (b0 GetOrderResponse_builder) Build() *GetOrderResponse {
	m0 := &GetOrderResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Order = b.Order
	return m0
}

type CreateOrderRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	mi := &file_order_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type CreateOrderRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 CreateOrderRequest_builder) Build() *CreateOrderRequest {
	m0 := &CreateOrderRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type CreateOrderResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrderResponse) Reset() {
	*x = CreateOrderResponse{}
	mi := &file_order_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResponse) ProtoMessage() {}

func (x *CreateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type CreateOrderResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 CreateOrderResponse_builder) Build() *CreateOrderResponse {
	m0 := &CreateOrderResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ListQuotesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BranchId    *string                `protobuf:"bytes,1,opt,name=branch_id,json=branchId"`
	xxx_hidden_PageSize    int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize"`
	xxx_hidden_Page        int32                  `protobuf:"varint,3,opt,name=page"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListQuotesRequest) Reset() {
	*x = ListQuotesRequest{}
	mi := &file_order_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQuotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotesRequest) ProtoMessage() {}

func (x *ListQuotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListQuotesRequest) GetBranchId() string {
	if x != nil {
		if x.xxx_hidden_BranchId != nil {
			return *x.xxx_hidden_BranchId
		}
		return ""
	}
	return ""
}

func (x *ListQuotesRequest) GetPageSize() int32 {
	if x != nil {
		return x.xxx_hidden_PageSize
	}
	return 0
}

func (x *ListQuotesRequest) GetPage() int32 {
	if x != nil {
		return x.xxx_hidden_Page
	}
	return 0
}

func (x *ListQuotesRequest) SetBranchId(v string) {
	x.xxx_hidden_BranchId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ListQuotesRequest) SetPageSize(v int32) {
	x.xxx_hidden_PageSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListQuotesRequest) SetPage(v int32) {
	x.xxx_hidden_Page = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListQuotesRequest) HasBranchId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListQuotesRequest) HasPageSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListQuotesRequest) HasPage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListQuotesRequest) ClearBranchId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BranchId = nil
}

func (x *ListQuotesRequest) ClearPageSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PageSize = 0
}

func (x *ListQuotesRequest) ClearPage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Page = 0
}

type ListQuotesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BranchId *string
	// Results to display on a page
	PageSize *int32
	// Currently selected page
	Page *int32
}

func (b0 ListQuotesRequest_builder) Build() *ListQuotesRequest {
	m0 := &ListQuotesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BranchId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_BranchId = b.BranchId
	}
	if b.PageSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_PageSize = *b.PageSize
	}
	if b.Page != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Page = *b.Page
	}
	return m0
}

type ListQuotesResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Quotes       *[]*QuoteSummary       `protobuf:"bytes,1,rep,name=quotes"`
	xxx_hidden_TotalRecords int32                  `protobuf:"varint,2,opt,name=total_records,json=totalRecords"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListQuotesResponse) Reset() {
	*x = ListQuotesResponse{}
	mi := &file_order_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQuotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotesResponse) ProtoMessage() {}

func (x *ListQuotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListQuotesResponse) GetQuotes() []*QuoteSummary {
	if x != nil {
		if x.xxx_hidden_Quotes != nil {
			return *x.xxx_hidden_Quotes
		}
	}
	return nil
}

func (x *ListQuotesResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.xxx_hidden_TotalRecords
	}
	return 0
}

func (x *ListQuotesResponse) SetQuotes(v []*QuoteSummary) {
	x.xxx_hidden_Quotes = &v
}

func (x *ListQuotesResponse) SetTotalRecords(v int32) {
	x.xxx_hidden_TotalRecords = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListQuotesResponse) HasTotalRecords() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListQuotesResponse) ClearTotalRecords() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalRecords = 0
}

type ListQuotesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Quotes       []*QuoteSummary
	TotalRecords *int32
}

func (b0 ListQuotesResponse_builder) Build() *ListQuotesResponse {
	m0 := &ListQuotesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Quotes = &b.Quotes
	if b.TotalRecords != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TotalRecords = *b.TotalRecords
	}
	return m0
}

type GetQuoteRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetQuoteRequest) Reset() {
	*x = GetQuoteRequest{}
	mi := &file_order_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteRequest) ProtoMessage() {}

func (x *GetQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetQuoteRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetQuoteRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetQuoteRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetQuoteRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type GetQuoteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 GetQuoteRequest_builder) Build() *GetQuoteRequest {
	m0 := &GetQuoteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type GetQuoteResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Quote *Quote                 `protobuf:"bytes,2,opt,name=quote"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetQuoteResponse) Reset() {
	*x = GetQuoteResponse{}
	mi := &file_order_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteResponse) ProtoMessage() {}

func (x *GetQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetQuoteResponse) GetQuote() *Quote {
	if x != nil {
		return x.xxx_hidden_Quote
	}
	return nil
}

func (x *GetQuoteResponse) SetQuote(v *Quote) {
	x.xxx_hidden_Quote = v
}

func (x *GetQuoteResponse) HasQuote() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Quote != nil
}

func (x *GetQuoteResponse) ClearQuote() {
	x.xxx_hidden_Quote = nil
}

type GetQuoteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Quote *Quote
}

func (b0 GetQuoteResponse_builder) Build() *GetQuoteResponse {
	m0 := &GetQuoteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Quote = b.Quote
	return m0
}

type CreateQuoteRequest struct {
	state                    protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Items         *[]*CreateQuoteRequest_Item `protobuf:"bytes,1,rep,name=items"`
	xxx_hidden_ContactId     *string                     `protobuf:"bytes,4,opt,name=contact_id,json=contactId"`
	xxx_hidden_BranchId      *string                     `protobuf:"bytes,5,opt,name=branch_id,json=branchId"`
	xxx_hidden_RequestedDate *timestamppb.Timestamp      `protobuf:"bytes,6,opt,name=requested_date,json=requestedDate"`
	xxx_hidden_Notes         *string                     `protobuf:"bytes,7,opt,name=notes"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CreateQuoteRequest) Reset() {
	*x = CreateQuoteRequest{}
	mi := &file_order_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuoteRequest) ProtoMessage() {}

func (x *CreateQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateQuoteRequest) GetItems() []*CreateQuoteRequest_Item {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *CreateQuoteRequest) GetContactId() string {
	if x != nil {
		if x.xxx_hidden_ContactId != nil {
			return *x.xxx_hidden_ContactId
		}
		return ""
	}
	return ""
}

func (x *CreateQuoteRequest) GetBranchId() string {
	if x != nil {
		if x.xxx_hidden_BranchId != nil {
			return *x.xxx_hidden_BranchId
		}
		return ""
	}
	return ""
}

func (x *CreateQuoteRequest) GetRequestedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RequestedDate
	}
	return nil
}

func (x *CreateQuoteRequest) GetNotes() string {
	if x != nil {
		if x.xxx_hidden_Notes != nil {
			return *x.xxx_hidden_Notes
		}
		return ""
	}
	return ""
}

func (x *CreateQuoteRequest) SetItems(v []*CreateQuoteRequest_Item) {
	x.xxx_hidden_Items = &v
}

func (x *CreateQuoteRequest) SetContactId(v string) {
	x.xxx_hidden_ContactId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CreateQuoteRequest) SetBranchId(v string) {
	x.xxx_hidden_BranchId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *CreateQuoteRequest) SetRequestedDate(v *timestamppb.Timestamp) {
	x.xxx_hidden_RequestedDate = v
}

func (x *CreateQuoteRequest) SetNotes(v string) {
	x.xxx_hidden_Notes = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *CreateQuoteRequest) HasContactId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateQuoteRequest) HasBranchId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateQuoteRequest) HasRequestedDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RequestedDate != nil
}

func (x *CreateQuoteRequest) HasNotes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CreateQuoteRequest) ClearContactId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ContactId = nil
}

func (x *CreateQuoteRequest) ClearBranchId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BranchId = nil
}

func (x *CreateQuoteRequest) ClearRequestedDate() {
	x.xxx_hidden_RequestedDate = nil
}

func (x *CreateQuoteRequest) ClearNotes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Notes = nil
}

type CreateQuoteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*CreateQuoteRequest_Item
	// customer accounts contact_id
	ContactId *string
	// represents ship_to in prophet and is used as a sub location of a customer record
	BranchId *string
	// date the customer requested the quote to be completed
	RequestedDate *timestamppb.Timestamp
	Notes         *string
}

func (b0 CreateQuoteRequest_builder) Build() *CreateQuoteRequest {
	m0 := &CreateQuoteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	if b.ContactId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_ContactId = b.ContactId
	}
	if b.BranchId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_BranchId = b.BranchId
	}
	x.xxx_hidden_RequestedDate = b.RequestedDate
	if b.Notes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Notes = b.Notes
	}
	return m0
}

type CreateQuoteResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateQuoteResponse) Reset() {
	*x = CreateQuoteResponse{}
	mi := &file_order_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuoteResponse) ProtoMessage() {}

func (x *CreateQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateQuoteResponse) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *CreateQuoteResponse) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CreateQuoteResponse) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateQuoteResponse) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type CreateQuoteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// id of the created quote
	Id *string
}

func (b0 CreateQuoteResponse_builder) Build() *CreateQuoteResponse {
	m0 := &CreateQuoteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type ListShipmentsByOrderRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OrderId     *string                `protobuf:"bytes,1,opt,name=order_id,json=orderId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListShipmentsByOrderRequest) Reset() {
	*x = ListShipmentsByOrderRequest{}
	mi := &file_order_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShipmentsByOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShipmentsByOrderRequest) ProtoMessage() {}

func (x *ListShipmentsByOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListShipmentsByOrderRequest) GetOrderId() string {
	if x != nil {
		if x.xxx_hidden_OrderId != nil {
			return *x.xxx_hidden_OrderId
		}
		return ""
	}
	return ""
}

func (x *ListShipmentsByOrderRequest) SetOrderId(v string) {
	x.xxx_hidden_OrderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListShipmentsByOrderRequest) HasOrderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListShipmentsByOrderRequest) ClearOrderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_OrderId = nil
}

type ListShipmentsByOrderRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OrderId *string
}

func (b0 ListShipmentsByOrderRequest_builder) Build() *ListShipmentsByOrderRequest {
	m0 := &ListShipmentsByOrderRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.OrderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_OrderId = b.OrderId
	}
	return m0
}

type ListShipmentsByOrderResponse struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Shipments *[]*Shipment           `protobuf:"bytes,1,rep,name=shipments"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListShipmentsByOrderResponse) Reset() {
	*x = ListShipmentsByOrderResponse{}
	mi := &file_order_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShipmentsByOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShipmentsByOrderResponse) ProtoMessage() {}

func (x *ListShipmentsByOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListShipmentsByOrderResponse) GetShipments() []*Shipment {
	if x != nil {
		if x.xxx_hidden_Shipments != nil {
			return *x.xxx_hidden_Shipments
		}
	}
	return nil
}

func (x *ListShipmentsByOrderResponse) SetShipments(v []*Shipment) {
	x.xxx_hidden_Shipments = &v
}

type ListShipmentsByOrderResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Shipments []*Shipment
}

func (b0 ListShipmentsByOrderResponse_builder) Build() *ListShipmentsByOrderResponse {
	m0 := &ListShipmentsByOrderResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Shipments = &b.Shipments
	return m0
}

type GetShipmentRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetShipmentRequest) Reset() {
	*x = GetShipmentRequest{}
	mi := &file_order_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentRequest) ProtoMessage() {}

func (x *GetShipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetShipmentRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetShipmentRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetShipmentRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetShipmentRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type GetShipmentRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 GetShipmentRequest_builder) Build() *GetShipmentRequest {
	m0 := &GetShipmentRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

type GetShipmentResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Shipment *Shipment              `protobuf:"bytes,1,opt,name=shipment"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetShipmentResponse) Reset() {
	*x = GetShipmentResponse{}
	mi := &file_order_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShipmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipmentResponse) ProtoMessage() {}

func (x *GetShipmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetShipmentResponse) GetShipment() *Shipment {
	if x != nil {
		return x.xxx_hidden_Shipment
	}
	return nil
}

func (x *GetShipmentResponse) SetShipment(v *Shipment) {
	x.xxx_hidden_Shipment = v
}

func (x *GetShipmentResponse) HasShipment() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Shipment != nil
}

func (x *GetShipmentResponse) ClearShipment() {
	x.xxx_hidden_Shipment = nil
}

type GetShipmentResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Shipment *Shipment
}

func (b0 GetShipmentResponse_builder) Build() *GetShipmentResponse {
	m0 := &GetShipmentResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Shipment = b.Shipment
	return m0
}

type GetPackingListRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InvoiceId   *string                `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetPackingListRequest) Reset() {
	*x = GetPackingListRequest{}
	mi := &file_order_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPackingListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingListRequest) ProtoMessage() {}

func (x *GetPackingListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetPackingListRequest) GetInvoiceId() string {
	if x != nil {
		if x.xxx_hidden_InvoiceId != nil {
			return *x.xxx_hidden_InvoiceId
		}
		return ""
	}
	return ""
}

func (x *GetPackingListRequest) SetInvoiceId(v string) {
	x.xxx_hidden_InvoiceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetPackingListRequest) HasInvoiceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetPackingListRequest) ClearInvoiceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_InvoiceId = nil
}

type GetPackingListRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	InvoiceId *string
}

func (b0 GetPackingListRequest_builder) Build() *GetPackingListRequest {
	m0 := &GetPackingListRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.InvoiceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_InvoiceId = b.InvoiceId
	}
	return m0
}

type GetPackingListResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PackingList *PackingList           `protobuf:"bytes,1,opt,name=packing_list,json=packingList"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetPackingListResponse) Reset() {
	*x = GetPackingListResponse{}
	mi := &file_order_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPackingListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingListResponse) ProtoMessage() {}

func (x *GetPackingListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetPackingListResponse) GetPackingList() *PackingList {
	if x != nil {
		return x.xxx_hidden_PackingList
	}
	return nil
}

func (x *GetPackingListResponse) SetPackingList(v *PackingList) {
	x.xxx_hidden_PackingList = v
}

func (x *GetPackingListResponse) HasPackingList() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PackingList != nil
}

func (x *GetPackingListResponse) ClearPackingList() {
	x.xxx_hidden_PackingList = nil
}

type GetPackingListResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PackingList *PackingList
}

func (b0 GetPackingListResponse_builder) Build() *GetPackingListResponse {
	m0 := &GetPackingListResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PackingList = b.PackingList
	return m0
}

type ListPackingListsByOrderRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OrderId     *string                `protobuf:"bytes,1,opt,name=order_id,json=orderId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListPackingListsByOrderRequest) Reset() {
	*x = ListPackingListsByOrderRequest{}
	mi := &file_order_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPackingListsByOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackingListsByOrderRequest) ProtoMessage() {}

func (x *ListPackingListsByOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListPackingListsByOrderRequest) GetOrderId() string {
	if x != nil {
		if x.xxx_hidden_OrderId != nil {
			return *x.xxx_hidden_OrderId
		}
		return ""
	}
	return ""
}

func (x *ListPackingListsByOrderRequest) SetOrderId(v string) {
	x.xxx_hidden_OrderId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ListPackingListsByOrderRequest) HasOrderId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListPackingListsByOrderRequest) ClearOrderId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_OrderId = nil
}

type ListPackingListsByOrderRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OrderId *string
}

func (b0 ListPackingListsByOrderRequest_builder) Build() *ListPackingListsByOrderRequest {
	m0 := &ListPackingListsByOrderRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.OrderId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_OrderId = b.OrderId
	}
	return m0
}

type ListPackingListsByOrderResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PackingLists *[]*PackingListSummary `protobuf:"bytes,1,rep,name=packing_lists,json=packingLists"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListPackingListsByOrderResponse) Reset() {
	*x = ListPackingListsByOrderResponse{}
	mi := &file_order_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPackingListsByOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackingListsByOrderResponse) ProtoMessage() {}

func (x *ListPackingListsByOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListPackingListsByOrderResponse) GetPackingLists() []*PackingListSummary {
	if x != nil {
		if x.xxx_hidden_PackingLists != nil {
			return *x.xxx_hidden_PackingLists
		}
	}
	return nil
}

func (x *ListPackingListsByOrderResponse) SetPackingLists(v []*PackingListSummary) {
	x.xxx_hidden_PackingLists = &v
}

type ListPackingListsByOrderResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PackingLists []*PackingListSummary
}

func (b0 ListPackingListsByOrderResponse_builder) Build() *ListPackingListsByOrderResponse {
	m0 := &ListPackingListsByOrderResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PackingLists = &b.PackingLists
	return m0
}

type Quote_Item struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ProductId         *string                `protobuf:"bytes,2,opt,name=product_id,json=productId"`
	xxx_hidden_ProductSn         *string                `protobuf:"bytes,3,opt,name=product_sn,json=productSn"`
	xxx_hidden_ProductName       *string                `protobuf:"bytes,4,opt,name=product_name,json=productName"`
	xxx_hidden_CustomerProductSn *string                `protobuf:"bytes,5,opt,name=customer_product_sn,json=customerProductSn"`
	xxx_hidden_OrderedQuantity   float64                `protobuf:"fixed64,6,opt,name=ordered_quantity,json=orderedQuantity"`
	xxx_hidden_UnitType          *string                `protobuf:"bytes,7,opt,name=unit_type,json=unitType"`
	xxx_hidden_UnitPrice         float64                `protobuf:"fixed64,8,opt,name=unit_price,json=unitPrice"`
	xxx_hidden_TotalPrice        float64                `protobuf:"fixed64,9,opt,name=total_price,json=totalPrice"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *Quote_Item) Reset() {
	*x = Quote_Item{}
	mi := &file_order_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quote_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote_Item) ProtoMessage() {}

func (x *Quote_Item) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Quote_Item) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Quote_Item) GetProductId() string {
	if x != nil {
		if x.xxx_hidden_ProductId != nil {
			return *x.xxx_hidden_ProductId
		}
		return ""
	}
	return ""
}

func (x *Quote_Item) GetProductSn() string {
	if x != nil {
		if x.xxx_hidden_ProductSn != nil {
			return *x.xxx_hidden_ProductSn
		}
		return ""
	}
	return ""
}

func (x *Quote_Item) GetProductName() string {
	if x != nil {
		if x.xxx_hidden_ProductName != nil {
			return *x.xxx_hidden_ProductName
		}
		return ""
	}
	return ""
}

func (x *Quote_Item) GetCustomerProductSn() string {
	if x != nil {
		if x.xxx_hidden_CustomerProductSn != nil {
			return *x.xxx_hidden_CustomerProductSn
		}
		return ""
	}
	return ""
}

func (x *Quote_Item) GetOrderedQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_OrderedQuantity
	}
	return 0
}

func (x *Quote_Item) GetUnitType() string {
	if x != nil {
		if x.xxx_hidden_UnitType != nil {
			return *x.xxx_hidden_UnitType
		}
		return ""
	}
	return ""
}

func (x *Quote_Item) GetUnitPrice() float64 {
	if x != nil {
		return x.xxx_hidden_UnitPrice
	}
	return 0
}

func (x *Quote_Item) GetTotalPrice() float64 {
	if x != nil {
		return x.xxx_hidden_TotalPrice
	}
	return 0
}

func (x *Quote_Item) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *Quote_Item) SetProductId(v string) {
	x.xxx_hidden_ProductId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *Quote_Item) SetProductSn(v string) {
	x.xxx_hidden_ProductSn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *Quote_Item) SetProductName(v string) {
	x.xxx_hidden_ProductName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *Quote_Item) SetCustomerProductSn(v string) {
	x.xxx_hidden_CustomerProductSn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *Quote_Item) SetOrderedQuantity(v float64) {
	x.xxx_hidden_OrderedQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *Quote_Item) SetUnitType(v string) {
	x.xxx_hidden_UnitType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *Quote_Item) SetUnitPrice(v float64) {
	x.xxx_hidden_UnitPrice = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *Quote_Item) SetTotalPrice(v float64) {
	x.xxx_hidden_TotalPrice = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *Quote_Item) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Quote_Item) HasProductId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Quote_Item) HasProductSn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Quote_Item) HasProductName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Quote_Item) HasCustomerProductSn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Quote_Item) HasOrderedQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Quote_Item) HasUnitType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Quote_Item) HasUnitPrice() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Quote_Item) HasTotalPrice() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Quote_Item) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Quote_Item) ClearProductId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProductId = nil
}

func (x *Quote_Item) ClearProductSn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ProductSn = nil
}

func (x *Quote_Item) ClearProductName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProductName = nil
}

func (x *Quote_Item) ClearCustomerProductSn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CustomerProductSn = nil
}

func (x *Quote_Item) ClearOrderedQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_OrderedQuantity = 0
}

func (x *Quote_Item) ClearUnitType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_UnitType = nil
}

func (x *Quote_Item) ClearUnitPrice() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_UnitPrice = 0
}

func (x *Quote_Item) ClearTotalPrice() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_TotalPrice = 0
}

type Quote_Item_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                *string
	ProductId         *string
	ProductSn         *string
	ProductName       *string
	CustomerProductSn *string
	OrderedQuantity   *float64
	UnitType          *string
	UnitPrice         *float64
	TotalPrice        *float64
}

func (b0 Quote_Item_builder) Build() *Quote_Item {
	m0 := &Quote_Item{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.ProductId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_ProductId = b.ProductId
	}
	if b.ProductSn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_ProductSn = b.ProductSn
	}
	if b.ProductName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_ProductName = b.ProductName
	}
	if b.CustomerProductSn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_CustomerProductSn = b.CustomerProductSn
	}
	if b.OrderedQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_OrderedQuantity = *b.OrderedQuantity
	}
	if b.UnitType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_UnitType = b.UnitType
	}
	if b.UnitPrice != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_UnitPrice = *b.UnitPrice
	}
	if b.TotalPrice != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_TotalPrice = *b.TotalPrice
	}
	return m0
}

type Order_Item struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                  *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ProductId           *string                `protobuf:"bytes,2,opt,name=product_id,json=productId"`
	xxx_hidden_ProductSn           *string                `protobuf:"bytes,3,opt,name=product_sn,json=productSn"`
	xxx_hidden_ProductName         *string                `protobuf:"bytes,4,opt,name=product_name,json=productName"`
	xxx_hidden_CustomerProductSn   *string                `protobuf:"bytes,5,opt,name=customer_product_sn,json=customerProductSn"`
	xxx_hidden_OrderedQuantity     float64                `protobuf:"fixed64,6,opt,name=ordered_quantity,json=orderedQuantity"`
	xxx_hidden_ShippedQuantity     float64                `protobuf:"fixed64,7,opt,name=shipped_quantity,json=shippedQuantity"`
	xxx_hidden_UnitType            *string                `protobuf:"bytes,8,opt,name=unit_type,json=unitType"`
	xxx_hidden_UnitPrice           float64                `protobuf:"fixed64,9,opt,name=unit_price,json=unitPrice"`
	xxx_hidden_TotalPrice          float64                `protobuf:"fixed64,10,opt,name=total_price,json=totalPrice"`
	xxx_hidden_BackOrderedQuantity float64                `protobuf:"fixed64,12,opt,name=back_ordered_quantity,json=backOrderedQuantity"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *Order_Item) Reset() {
	*x = Order_Item{}
	mi := &file_order_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order_Item) ProtoMessage() {}

func (x *Order_Item) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Order_Item) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Order_Item) GetProductId() string {
	if x != nil {
		if x.xxx_hidden_ProductId != nil {
			return *x.xxx_hidden_ProductId
		}
		return ""
	}
	return ""
}

func (x *Order_Item) GetProductSn() string {
	if x != nil {
		if x.xxx_hidden_ProductSn != nil {
			return *x.xxx_hidden_ProductSn
		}
		return ""
	}
	return ""
}

func (x *Order_Item) GetProductName() string {
	if x != nil {
		if x.xxx_hidden_ProductName != nil {
			return *x.xxx_hidden_ProductName
		}
		return ""
	}
	return ""
}

func (x *Order_Item) GetCustomerProductSn() string {
	if x != nil {
		if x.xxx_hidden_CustomerProductSn != nil {
			return *x.xxx_hidden_CustomerProductSn
		}
		return ""
	}
	return ""
}

func (x *Order_Item) GetOrderedQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_OrderedQuantity
	}
	return 0
}

func (x *Order_Item) GetShippedQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_ShippedQuantity
	}
	return 0
}

func (x *Order_Item) GetUnitType() string {
	if x != nil {
		if x.xxx_hidden_UnitType != nil {
			return *x.xxx_hidden_UnitType
		}
		return ""
	}
	return ""
}

func (x *Order_Item) GetUnitPrice() float64 {
	if x != nil {
		return x.xxx_hidden_UnitPrice
	}
	return 0
}

func (x *Order_Item) GetTotalPrice() float64 {
	if x != nil {
		return x.xxx_hidden_TotalPrice
	}
	return 0
}

func (x *Order_Item) GetBackOrderedQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_BackOrderedQuantity
	}
	return 0
}

func (x *Order_Item) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *Order_Item) SetProductId(v string) {
	x.xxx_hidden_ProductId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *Order_Item) SetProductSn(v string) {
	x.xxx_hidden_ProductSn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *Order_Item) SetProductName(v string) {
	x.xxx_hidden_ProductName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *Order_Item) SetCustomerProductSn(v string) {
	x.xxx_hidden_CustomerProductSn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *Order_Item) SetOrderedQuantity(v float64) {
	x.xxx_hidden_OrderedQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 11)
}

func (x *Order_Item) SetShippedQuantity(v float64) {
	x.xxx_hidden_ShippedQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 11)
}

func (x *Order_Item) SetUnitType(v string) {
	x.xxx_hidden_UnitType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 11)
}

func (x *Order_Item) SetUnitPrice(v float64) {
	x.xxx_hidden_UnitPrice = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 11)
}

func (x *Order_Item) SetTotalPrice(v float64) {
	x.xxx_hidden_TotalPrice = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *Order_Item) SetBackOrderedQuantity(v float64) {
	x.xxx_hidden_BackOrderedQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 11)
}

func (x *Order_Item) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Order_Item) HasProductId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Order_Item) HasProductSn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Order_Item) HasProductName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Order_Item) HasCustomerProductSn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Order_Item) HasOrderedQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Order_Item) HasShippedQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *Order_Item) HasUnitType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Order_Item) HasUnitPrice() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Order_Item) HasTotalPrice() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *Order_Item) HasBackOrderedQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Order_Item) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Order_Item) ClearProductId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProductId = nil
}

func (x *Order_Item) ClearProductSn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ProductSn = nil
}

func (x *Order_Item) ClearProductName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProductName = nil
}

func (x *Order_Item) ClearCustomerProductSn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CustomerProductSn = nil
}

func (x *Order_Item) ClearOrderedQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_OrderedQuantity = 0
}

func (x *Order_Item) ClearShippedQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ShippedQuantity = 0
}

func (x *Order_Item) ClearUnitType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_UnitType = nil
}

func (x *Order_Item) ClearUnitPrice() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_UnitPrice = 0
}

func (x *Order_Item) ClearTotalPrice() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_TotalPrice = 0
}

func (x *Order_Item) ClearBackOrderedQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_BackOrderedQuantity = 0
}

type Order_Item_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                  *string
	ProductId           *string
	ProductSn           *string
	ProductName         *string
	CustomerProductSn   *string
	OrderedQuantity     *float64
	ShippedQuantity     *float64
	UnitType            *string
	UnitPrice           *float64
	TotalPrice          *float64
	BackOrderedQuantity *float64
}

func (b0 Order_Item_builder) Build() *Order_Item {
	m0 := &Order_Item{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Id = b.Id
	}
	if b.ProductId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_ProductId = b.ProductId
	}
	if b.ProductSn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_ProductSn = b.ProductSn
	}
	if b.ProductName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_ProductName = b.ProductName
	}
	if b.CustomerProductSn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_CustomerProductSn = b.CustomerProductSn
	}
	if b.OrderedQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 11)
		x.xxx_hidden_OrderedQuantity = *b.OrderedQuantity
	}
	if b.ShippedQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 11)
		x.xxx_hidden_ShippedQuantity = *b.ShippedQuantity
	}
	if b.UnitType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 11)
		x.xxx_hidden_UnitType = b.UnitType
	}
	if b.UnitPrice != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 11)
		x.xxx_hidden_UnitPrice = *b.UnitPrice
	}
	if b.TotalPrice != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_TotalPrice = *b.TotalPrice
	}
	if b.BackOrderedQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 11)
		x.xxx_hidden_BackOrderedQuantity = *b.BackOrderedQuantity
	}
	return m0
}

type PackingList_Item struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ProductId          *string                `protobuf:"bytes,1,opt,name=product_id,json=productId"`
	xxx_hidden_ProductSn          *string                `protobuf:"bytes,2,opt,name=product_sn,json=productSn"`
	xxx_hidden_ProductName        *string                `protobuf:"bytes,3,opt,name=product_name,json=productName"`
	xxx_hidden_ProductDescription *string                `protobuf:"bytes,4,opt,name=product_description,json=productDescription"`
	xxx_hidden_CustomerProductSn  *string                `protobuf:"bytes,5,opt,name=customer_product_sn,json=customerProductSn"`
	xxx_hidden_OrderedQuantity    float64                `protobuf:"fixed64,6,opt,name=ordered_quantity,json=orderedQuantity"`
	xxx_hidden_ShippedQuantity    float64                `protobuf:"fixed64,7,opt,name=shipped_quantity,json=shippedQuantity"`
	xxx_hidden_RemainingQuantity  float64                `protobuf:"fixed64,8,opt,name=remaining_quantity,json=remainingQuantity"`
	xxx_hidden_UnitOfMeasurement  *UnitOfMeasurement     `protobuf:"bytes,9,opt,name=unit_of_measurement,json=unitOfMeasurement"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *PackingList_Item) Reset() {
	*x = PackingList_Item{}
	mi := &file_order_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackingList_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackingList_Item) ProtoMessage() {}

func (x *PackingList_Item) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PackingList_Item) GetProductId() string {
	if x != nil {
		if x.xxx_hidden_ProductId != nil {
			return *x.xxx_hidden_ProductId
		}
		return ""
	}
	return ""
}

func (x *PackingList_Item) GetProductSn() string {
	if x != nil {
		if x.xxx_hidden_ProductSn != nil {
			return *x.xxx_hidden_ProductSn
		}
		return ""
	}
	return ""
}

func (x *PackingList_Item) GetProductName() string {
	if x != nil {
		if x.xxx_hidden_ProductName != nil {
			return *x.xxx_hidden_ProductName
		}
		return ""
	}
	return ""
}

func (x *PackingList_Item) GetProductDescription() string {
	if x != nil {
		if x.xxx_hidden_ProductDescription != nil {
			return *x.xxx_hidden_ProductDescription
		}
		return ""
	}
	return ""
}

func (x *PackingList_Item) GetCustomerProductSn() string {
	if x != nil {
		if x.xxx_hidden_CustomerProductSn != nil {
			return *x.xxx_hidden_CustomerProductSn
		}
		return ""
	}
	return ""
}

func (x *PackingList_Item) GetOrderedQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_OrderedQuantity
	}
	return 0
}

func (x *PackingList_Item) GetShippedQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_ShippedQuantity
	}
	return 0
}

func (x *PackingList_Item) GetRemainingQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_RemainingQuantity
	}
	return 0
}

func (x *PackingList_Item) GetUnitOfMeasurement() *UnitOfMeasurement {
	if x != nil {
		return x.xxx_hidden_UnitOfMeasurement
	}
	return nil
}

func (x *PackingList_Item) SetProductId(v string) {
	x.xxx_hidden_ProductId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *PackingList_Item) SetProductSn(v string) {
	x.xxx_hidden_ProductSn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *PackingList_Item) SetProductName(v string) {
	x.xxx_hidden_ProductName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *PackingList_Item) SetProductDescription(v string) {
	x.xxx_hidden_ProductDescription = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *PackingList_Item) SetCustomerProductSn(v string) {
	x.xxx_hidden_CustomerProductSn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *PackingList_Item) SetOrderedQuantity(v float64) {
	x.xxx_hidden_OrderedQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *PackingList_Item) SetShippedQuantity(v float64) {
	x.xxx_hidden_ShippedQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *PackingList_Item) SetRemainingQuantity(v float64) {
	x.xxx_hidden_RemainingQuantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *PackingList_Item) SetUnitOfMeasurement(v *UnitOfMeasurement) {
	x.xxx_hidden_UnitOfMeasurement = v
}

func (x *PackingList_Item) HasProductId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PackingList_Item) HasProductSn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PackingList_Item) HasProductName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PackingList_Item) HasProductDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *PackingList_Item) HasCustomerProductSn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *PackingList_Item) HasOrderedQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *PackingList_Item) HasShippedQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *PackingList_Item) HasRemainingQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *PackingList_Item) HasUnitOfMeasurement() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_UnitOfMeasurement != nil
}

func (x *PackingList_Item) ClearProductId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ProductId = nil
}

func (x *PackingList_Item) ClearProductSn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProductSn = nil
}

func (x *PackingList_Item) ClearProductName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ProductName = nil
}

func (x *PackingList_Item) ClearProductDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProductDescription = nil
}

func (x *PackingList_Item) ClearCustomerProductSn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CustomerProductSn = nil
}

func (x *PackingList_Item) ClearOrderedQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_OrderedQuantity = 0
}

func (x *PackingList_Item) ClearShippedQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ShippedQuantity = 0
}

func (x *PackingList_Item) ClearRemainingQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_RemainingQuantity = 0
}

func (x *PackingList_Item) ClearUnitOfMeasurement() {
	x.xxx_hidden_UnitOfMeasurement = nil
}

type PackingList_Item_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ProductId          *string
	ProductSn          *string
	ProductName        *string
	ProductDescription *string
	CustomerProductSn  *string
	OrderedQuantity    *float64
	ShippedQuantity    *float64
	RemainingQuantity  *float64
	UnitOfMeasurement  *UnitOfMeasurement
}

func (b0 PackingList_Item_builder) Build() *PackingList_Item {
	m0 := &PackingList_Item{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProductId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_ProductId = b.ProductId
	}
	if b.ProductSn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_ProductSn = b.ProductSn
	}
	if b.ProductName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_ProductName = b.ProductName
	}
	if b.ProductDescription != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_ProductDescription = b.ProductDescription
	}
	if b.CustomerProductSn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_CustomerProductSn = b.CustomerProductSn
	}
	if b.OrderedQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_OrderedQuantity = *b.OrderedQuantity
	}
	if b.ShippedQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_ShippedQuantity = *b.ShippedQuantity
	}
	if b.RemainingQuantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_RemainingQuantity = *b.RemainingQuantity
	}
	x.xxx_hidden_UnitOfMeasurement = b.UnitOfMeasurement
	return m0
}

type CreateQuoteRequest_Item struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ProductId   *string                `protobuf:"bytes,1,opt,name=product_id,json=productId"`
	xxx_hidden_Quantity    float64                `protobuf:"fixed64,2,opt,name=quantity"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateQuoteRequest_Item) Reset() {
	*x = CreateQuoteRequest_Item{}
	mi := &file_order_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuoteRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuoteRequest_Item) ProtoMessage() {}

func (x *CreateQuoteRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateQuoteRequest_Item) GetProductId() string {
	if x != nil {
		if x.xxx_hidden_ProductId != nil {
			return *x.xxx_hidden_ProductId
		}
		return ""
	}
	return ""
}

func (x *CreateQuoteRequest_Item) GetQuantity() float64 {
	if x != nil {
		return x.xxx_hidden_Quantity
	}
	return 0
}

func (x *CreateQuoteRequest_Item) SetProductId(v string) {
	x.xxx_hidden_ProductId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CreateQuoteRequest_Item) SetQuantity(v float64) {
	x.xxx_hidden_Quantity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *CreateQuoteRequest_Item) HasProductId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateQuoteRequest_Item) HasQuantity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateQuoteRequest_Item) ClearProductId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ProductId = nil
}

func (x *CreateQuoteRequest_Item) ClearQuantity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Quantity = 0
}

type CreateQuoteRequest_Item_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// unique identifier for the product
	ProductId *string
	// quantity of the product to be quoted
	Quantity *float64
}

func (b0 CreateQuoteRequest_Item_builder) Build() *CreateQuoteRequest_Item {
	m0 := &CreateQuoteRequest_Item{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProductId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ProductId = b.ProductId
	}
	if b.Quantity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Quantity = *b.Quantity
	}
	return m0
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x11, 0x55, 0x6e, 0x69, 0x74,
	0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x2e, 0x0a, 0x08, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xc9, 0x02, 0x0a, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x28,
	0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d,
	0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x22, 0xe3, 0x05, 0x0a,
	0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x12, 0x41, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0xaf, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0xb1, 0x06, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3c, 0x0a, 0x10,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x8e, 0x03, 0x0a, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x29, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x6e, 0x69,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x62, 0x61, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x85, 0x03, 0x0a, 0x08,
	0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x22, 0xc8, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x77, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x8f,
	0x01, 0x0a, 0x12, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x3f, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64,
	0x22, 0xbf, 0x0b, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x3c, 0x0a, 0x10,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x33, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x0e,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x74, 0x65,
	0x72, 0x6d, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x51, 0x0a, 0x17, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x74,
	0x65, 0x72, 0x6d, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x1e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x9a, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e,
	0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66,
	0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e,
	0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x11, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x61, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x14,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x69,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x06, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x1a, 0x41, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x50, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x09, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x1e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x42,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x70,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x2a, 0xa1,
	0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x18, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x50, 0x50,
	0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x21, 0x0a, 0x1d, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x41, 0x4c,
	0x10, 0x04, 0x2a, 0x9f, 0x01, 0x0a, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x51, 0x55, 0x4f, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x21, 0x0a, 0x1d, 0x51, 0x55, 0x4f, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x41,
	0x4c, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x55, 0x4f, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a,
	0x0a, 0x16, 0x51, 0x55, 0x4f, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x55,
	0x4f, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52,
	0x45, 0x44, 0x10, 0x04, 0x32, 0xb6, 0x06, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x0a, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x25, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x92,
	0x03, 0x05, 0xd2, 0x3e, 0x02, 0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x70, 0xe8, 0x07,
})

var file_order_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_order_proto_goTypes = []any{
	(OrderStatus)(0),                        // 0: order.v1.OrderStatus
	(QuoteStatus)(0),                        // 1: order.v1.QuoteStatus
	(*UnitOfMeasurement)(nil),               // 2: order.v1.UnitOfMeasurement
	(*Customer)(nil),                        // 3: order.v1.Customer
	(*Contact)(nil),                         // 4: order.v1.Contact
	(*Branch)(nil),                          // 5: order.v1.Branch
	(*QuoteSummary)(nil),                    // 6: order.v1.QuoteSummary
	(*Quote)(nil),                           // 7: order.v1.Quote
	(*OrderSummary)(nil),                    // 8: order.v1.OrderSummary
	(*Order)(nil),                           // 9: order.v1.Order
	(*Shipment)(nil),                        // 10: order.v1.Shipment
	(*Address)(nil),                         // 11: order.v1.Address
	(*PackingListSummary)(nil),              // 12: order.v1.PackingListSummary
	(*PackingList)(nil),                     // 13: order.v1.PackingList
	(*ListOrdersRequest)(nil),               // 14: order.v1.ListOrdersRequest
	(*ListOrdersResponse)(nil),              // 15: order.v1.ListOrdersResponse
	(*GetOrderRequest)(nil),                 // 16: order.v1.GetOrderRequest
	(*GetOrderResponse)(nil),                // 17: order.v1.GetOrderResponse
	(*CreateOrderRequest)(nil),              // 18: order.v1.CreateOrderRequest
	(*CreateOrderResponse)(nil),             // 19: order.v1.CreateOrderResponse
	(*ListQuotesRequest)(nil),               // 20: order.v1.ListQuotesRequest
	(*ListQuotesResponse)(nil),              // 21: order.v1.ListQuotesResponse
	(*GetQuoteRequest)(nil),                 // 22: order.v1.GetQuoteRequest
	(*GetQuoteResponse)(nil),                // 23: order.v1.GetQuoteResponse
	(*CreateQuoteRequest)(nil),              // 24: order.v1.CreateQuoteRequest
	(*CreateQuoteResponse)(nil),             // 25: order.v1.CreateQuoteResponse
	(*ListShipmentsByOrderRequest)(nil),     // 26: order.v1.ListShipmentsByOrderRequest
	(*ListShipmentsByOrderResponse)(nil),    // 27: order.v1.ListShipmentsByOrderResponse
	(*GetShipmentRequest)(nil),              // 28: order.v1.GetShipmentRequest
	(*GetShipmentResponse)(nil),             // 29: order.v1.GetShipmentResponse
	(*GetPackingListRequest)(nil),           // 30: order.v1.GetPackingListRequest
	(*GetPackingListResponse)(nil),          // 31: order.v1.GetPackingListResponse
	(*ListPackingListsByOrderRequest)(nil),  // 32: order.v1.ListPackingListsByOrderRequest
	(*ListPackingListsByOrderResponse)(nil), // 33: order.v1.ListPackingListsByOrderResponse
	(*Quote_Item)(nil),                      // 34: order.v1.Quote.Item
	(*Order_Item)(nil),                      // 35: order.v1.Order.Item
	(*PackingList_Item)(nil),                // 36: order.v1.PackingList.Item
	(*CreateQuoteRequest_Item)(nil),         // 37: order.v1.CreateQuoteRequest.Item
	(*timestamppb.Timestamp)(nil),           // 38: google.protobuf.Timestamp
}
var file_order_proto_depIdxs = []int32{
	4,  // 0: order.v1.QuoteSummary.contact:type_name -> order.v1.Contact
	5,  // 1: order.v1.QuoteSummary.branch:type_name -> order.v1.Branch
	1,  // 2: order.v1.QuoteSummary.status:type_name -> order.v1.QuoteStatus
	38, // 3: order.v1.QuoteSummary.date_created:type_name -> google.protobuf.Timestamp
	38, // 4: order.v1.QuoteSummary.date_expires:type_name -> google.protobuf.Timestamp
	4,  // 5: order.v1.Quote.contact:type_name -> order.v1.Contact
	5,  // 6: order.v1.Quote.branch:type_name -> order.v1.Branch
	1,  // 7: order.v1.Quote.status:type_name -> order.v1.QuoteStatus
	38, // 8: order.v1.Quote.date_created:type_name -> google.protobuf.Timestamp
	38, // 9: order.v1.Quote.date_expires:type_name -> google.protobuf.Timestamp
	38, // 10: order.v1.Quote.date_requested:type_name -> google.protobuf.Timestamp
	34, // 11: order.v1.Quote.items:type_name -> order.v1.Quote.Item
	0,  // 12: order.v1.OrderSummary.status:type_name -> order.v1.OrderStatus
	38, // 13: order.v1.OrderSummary.date_created:type_name -> google.protobuf.Timestamp
	38, // 14: order.v1.OrderSummary.date_requested:type_name -> google.protobuf.Timestamp
	0,  // 15: order.v1.Order.status:type_name -> order.v1.OrderStatus
	38, // 16: order.v1.Order.date_created:type_name -> google.protobuf.Timestamp
	38, // 17: order.v1.Order.date_requested:type_name -> google.protobuf.Timestamp
	35, // 18: order.v1.Order.order_items:type_name -> order.v1.Order.Item
	11, // 19: order.v1.Order.shipping_address:type_name -> order.v1.Address
	11, // 20: order.v1.Shipment.shipping_address:type_name -> order.v1.Address
	4,  // 21: order.v1.Shipment.contact:type_name -> order.v1.Contact
	3,  // 22: order.v1.Shipment.customer:type_name -> order.v1.Customer
	38, // 23: order.v1.PackingListSummary.date_invoiced:type_name -> google.protobuf.Timestamp
	38, // 24: order.v1.PackingList.date_invoiced:type_name -> google.protobuf.Timestamp
	38, // 25: order.v1.PackingList.date_ordered:type_name -> google.protobuf.Timestamp
	11, // 26: order.v1.PackingList.billing_address:type_name -> order.v1.Address
	11, // 27: order.v1.PackingList.shipping_address:type_name -> order.v1.Address
	38, // 28: order.v1.PackingList.terms_due_date:type_name -> google.protobuf.Timestamp
	38, // 29: order.v1.PackingList.terms_discount_due_date:type_name -> google.protobuf.Timestamp
	36, // 30: order.v1.PackingList.items:type_name -> order.v1.PackingList.Item
	8,  // 31: order.v1.ListOrdersResponse.orders:type_name -> order.v1.OrderSummary
	9,  // 32: order.v1.GetOrderResponse.order:type_name -> order.v1.Order
	6,  // 33: order.v1.ListQuotesResponse.quotes:type_name -> order.v1.QuoteSummary
	7,  // 34: order.v1.GetQuoteResponse.quote:type_name -> order.v1.Quote
	37, // 35: order.v1.CreateQuoteRequest.items:type_name -> order.v1.CreateQuoteRequest.Item
	38, // 36: order.v1.CreateQuoteRequest.requested_date:type_name -> google.protobuf.Timestamp
	10, // 37: order.v1.ListShipmentsByOrderResponse.shipments:type_name -> order.v1.Shipment
	10, // 38: order.v1.GetShipmentResponse.shipment:type_name -> order.v1.Shipment
	13, // 39: order.v1.GetPackingListResponse.packing_list:type_name -> order.v1.PackingList
	12, // 40: order.v1.ListPackingListsByOrderResponse.packing_lists:type_name -> order.v1.PackingListSummary
	2,  // 41: order.v1.PackingList.Item.unit_of_measurement:type_name -> order.v1.UnitOfMeasurement
	14, // 42: order.v1.OrderService.ListOrders:input_type -> order.v1.ListOrdersRequest
	16, // 43: order.v1.OrderService.GetOrder:input_type -> order.v1.GetOrderRequest
	18, // 44: order.v1.OrderService.CreateOrder:input_type -> order.v1.CreateOrderRequest
	20, // 45: order.v1.OrderService.ListQuotes:input_type -> order.v1.ListQuotesRequest
	22, // 46: order.v1.OrderService.GetQuote:input_type -> order.v1.GetQuoteRequest
	24, // 47: order.v1.OrderService.CreateQuote:input_type -> order.v1.CreateQuoteRequest
	26, // 48: order.v1.OrderService.ListShipmentsByOrder:input_type -> order.v1.ListShipmentsByOrderRequest
	28, // 49: order.v1.OrderService.GetShipment:input_type -> order.v1.GetShipmentRequest
	30, // 50: order.v1.OrderService.GetPackingList:input_type -> order.v1.GetPackingListRequest
	32, // 51: order.v1.OrderService.ListPackingListsByOrder:input_type -> order.v1.ListPackingListsByOrderRequest
	15, // 52: order.v1.OrderService.ListOrders:output_type -> order.v1.ListOrdersResponse
	17, // 53: order.v1.OrderService.GetOrder:output_type -> order.v1.GetOrderResponse
	19, // 54: order.v1.OrderService.CreateOrder:output_type -> order.v1.CreateOrderResponse
	21, // 55: order.v1.OrderService.ListQuotes:output_type -> order.v1.ListQuotesResponse
	23, // 56: order.v1.OrderService.GetQuote:output_type -> order.v1.GetQuoteResponse
	25, // 57: order.v1.OrderService.CreateQuote:output_type -> order.v1.CreateQuoteResponse
	27, // 58: order.v1.OrderService.ListShipmentsByOrder:output_type -> order.v1.ListShipmentsByOrderResponse
	29, // 59: order.v1.OrderService.GetShipment:output_type -> order.v1.GetShipmentResponse
	31, // 60: order.v1.OrderService.GetPackingList:output_type -> order.v1.GetPackingListResponse
	33, // 61: order.v1.OrderService.ListPackingListsByOrder:output_type -> order.v1.ListPackingListsByOrderResponse
	52, // [52:62] is the sub-list for method output_type
	42, // [42:52] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_order_proto_rawDesc), len(file_order_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		EnumInfos:         file_order_proto_enumTypes,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}
