openapi: 3.1.1
info:
  title: Materials Resources Store APIs
  description: APIs for the Materials Resources Store designed specifically for the accompanying web application
  version: 1.0.0
tags:
  - name: account
    description: Account operations such as order and invoice management
  - name: order
    description: Order operations for customers
  - name: product
    description: Product operations related to finding and viewing products
servers:
  - url: http://localhost:8080
    description: Local development server

security:
  - BearerAuth: []
paths:
  /account/branch:
    get:
      summary: Get available branches for customer
      operationId: listCustomerBranches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  branches:
                    type: array
                    items:
                      $ref: '#/components/schemas/Branch'
        '401':
          description: "Unauthorized"
        default:
          description: "General Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Set active branch for current user
      operationId: setActiveBranch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - branch_id
              properties:
                branch_id:
                  type: string
                  description: ID of the branch to set as active
      responses:
        '200':
          description: Branch successfully set
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Active branch updated successfully"
        '400':
          description: Invalid branch ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: User does not have access to this branch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /account/branches/active:
    get:
      summary: Get active branch for user
      operationId: getActiveBranch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - branch
                type: object
                properties:
                  branch:
                    $ref: '#/components/schemas/Branch'
        '401':
          description: "Unauthorized"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /account/orders:
    get:
      tags:
        - account
      summary: Get a list of orders
      operationId: listOrders
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
        - name: purchase_order
          in: query
          required: false
          schema:
            type: string
        - name: order_id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "List of orders for account"
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_records
                  - orders
                properties:
                  total_records:
                    type: integer
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderSummary'
        '401':
          description: "Unauthorized"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /account/orders/{id}:
    get:
      operationId: getOrder
      tags:
        - order
      summary: Get an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Order Details"
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/Order'
                required:
                  - order
        '401':
          description: "Unauthorized"
        '404':
          description: "Not Found"
        default:
          description: "General Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /account/quotes:
    post:
      summary: Create a new quote
      operationId: createQuote
      tags:
        - account
      description: |
        Create a new quote. The `customer_id` and `contact_id` are extracted from the provided authentication token. Make sure to include a valid bearer token in the `Authorization` header.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - notes
                - date_requested
                - items
              properties:
                notes:
                  type: string
                date_requested:
                  type: string
                  format: date-time
                  description: Date of the request.  Should be in YYYY-MM-DD format (ISO 8601).
                items:
                  type: array
                  description: List of items for the quote
                  items:
                    type: object
                    required:
                      - product_id
                      - quantity
                    properties:
                      product_id:
                        type: string
                        description: ID of the product
                      quantity:
                        type: number
                        x-go-type: float64
                        description: Quantity of the product
      responses:
        '201':
          description: Quote successfully created
          content:
            application/json:
              schema:
                required:
                  - quote_id
                type: object
                properties:
                  quote_id:
                    type: string
                    description: ID of the created quote
                  status:
                    type: string
                    description: Status of the quote creation

        '401':
          description: "Unauthorized"
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: List of validation errors
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: The field where the validation error occurred
                        message:
                          type: string
                          description: A descriptive error message
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - account
      summary: Get a list of quotes
      operationId: listQuotes
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
        - name: reference_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: "List of quote summaries for account"
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_records
                  - quotes
                properties:
                  total_records:
                    type: integer
                  quotes:
                    type: array
                    items:
                      $ref: '#/components/schemas/QuoteSummary'
        '401':
          description: "Unauthorized"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /account/quotes/{id}:
    get:
      summary: Get quote by ID
      operationId: getQuote
      tags:
        - account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - quote
                properties:
                  quote:
                    $ref: '#/components/schemas/Quote'
        '401':
          description: "Unauthorized"
        '404':
          description: "Not Found"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /account/invoices:
    get:
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: page_size
          in: query
          schema:
            type: integer
      summary: Get a list of invoices
      operationId: listInvoices
      tags:
        - account
      responses:
        '200':
          description: "List of invoice summaries for account"
          content:
            application/json:
              schema:
                type: object
                required:
                  - invoices
                  - total_records
                properties:
                  total_records:
                    type: integer
                  invoices:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoiceSummary'
        '401':
          description: "Unauthorized"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /account/invoices/{id}/report:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: Get invoice report by ID
      operationId: getInvoiceReport
      tags:
        - account
      responses:
        '200':
          description: "Invoice report document"
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: "Unauthorized"
        '404':
          description: "Not Found"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /account/packinglist/{id}/report:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: Get packing list report by ID
      operationId: getPackingListReport
      tags:
        - account
      responses:
        '200':
          description: "Packing list report document"
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: "Unauthorized"
        '404':
          description: "Not Found"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /account/recent-purchases:
    get:
      summary: Get recent purchases for customer
      operationId: getRecentPurchases
      tags:
        - account
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "List of recent purchases"
          content:
            application/json:
              schema:
                type: object
                required:
                  - purchases
                  - total_records
                properties:
                  total_records:
                    type: integer
                  purchases:
                    type: array
                    items:
                      $ref: '#/components/schemas/PurchaseSummary'
        '401':
          description: "Unauthorized"
        '404':
          description: "Not Found"
        default:
          description: "General Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /products/{id}:
    get:
      summary: Get a product by ID
      security: []
      operationId: getProduct
      tags:
        - product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/Product'
                required:
                  - product
        '404':
          description: "Not Found"
        default:
          description: "General Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /search/products:
    post:
      security: [ ]
      tags:
        - product
      operationId: searchProducts
      summary: Search for products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sort_by:
                  type: string
                filters:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string
                page:
                  type: integer
                query:
                  type: string
      responses:
        '200':
          description: "Search results"
          content:
            application/json:
              schema:
                required:
                  - metadata
                  - products
                  - aggregations
                type: object
                properties:
                  aggregations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Aggregation'
                  metadata:
                    $ref: '#/components/schemas/PageMetadata'
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        default:
          description: "General Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /contact:
    post:
      security: []
      tags:
        - contact
      operationId: contactUs
      summary: "Send details regarding a contact inquiry"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
              - name
              - organization
              - email
              - telephone
              - message
              type: object
              properties:
                name:
                  type: string
                organization:
                  type: string
                email:
                  type: string
                  format: email
                message:
                  type: string
                telephone:
                  type: string
                  pattern: ^[+]?[(]?[0-9]{3}[)]?[-\s.]?[0-9]{3}[-\s.]?[0-9]{4,6}$
                  description: "Phone number in various formats (e.g., 123-456-7890, (123) 456-7890, 123.456.7890)"
      responses:

        "200":
          description: "OK"
        default:
          description: "General Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    InvoiceSummary:
      required:
        - id
        - order_id
        - date_invoiced
        - paid_amount
        - total_amount
      type: object
      properties:
        id:
          type: string
        order_id:
          type: string
        date_invoiced:
          type: string
          format: date-time
        paid_amount:
          type: number
          x-go-type: float64
        total_amount:
          type: number
          x-go-type: float64

    PackingListSummary:
      required:
        - invoice_id
        - date_invoiced
      type: object
      properties:
        invoice_id:
          type: string
        date_invoiced:
          type: string
          format: date-time
    Address:
      required:
        - id
        - name
        - line_one
        - line_two
        - city
        - state
        - postal_code
        - country
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        line_one:
          type: string
        line_two:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
    Branch:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    PageMetadata:
      required:
        - total_pages
        - total_records
      type: object
      properties:
        total_pages:
          type: integer
        total_records:
          type: integer
    SearchMetadataFacet:
      required:
        - attribute
        - options
      type: object
      properties:
        attribute:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/SearchMetadataFacetOption'
    SearchMetadataFacetOption:
      required:
        - value
        - count
      type: object
      properties:
        value:
          type: string
        count:
          type: integer
    OrderStatus:
      type: string
      enum:
        - unspecified
        - approved
        - completed
        - cancelled
        - pending_approval
    Order:
      required:
        - id
        - contact_id
        - branch_id
        - purchase_order
        - status
        - date_ordered
        - date_requested
        - delivery_instructions
        - shipping_address
        - items
        - packing_lists
        - invoices
        - total
      type: object
      properties:
        id:
          type: string
        contact_id:
          type: string
        branch_id:
          type: string
        purchase_order:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        date_ordered:
          type: string
          format: date-time
        date_requested:
          type: string
          format: date-time
        taker:
          type: string
        delivery_instructions:
          type: string
        shipping_address:
          $ref: '#/components/schemas/Address'
        total:
          x-go-type: float64
          type: number
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        packing_lists:
          type: array
          items:
            $ref: '#/components/schemas/PackingListSummary'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceSummary'
    OrderItemDisposition:
      type: string
      enum:
        - unspecified
        - backorder
        - cancel
        - direct_ship
        - future
        - hold
        - multistage_process
        - production_order
        - special_order
        - transfer
    OrderItem:
      required:
        - product_sn
        - product_name
        - product_id
        - customer_product_sn
        - ordered_quantity
        - shipped_quantity
        - remaining_quantity
        - unit_type
        - unit_price
        - total_price
        - back_ordered_quantity
        - releases
      type: object
      properties:
        product_sn:
          type: string
        product_name:
          type: string
        product_id:
          type: string
        customer_product_sn:
          type: string
        ordered_quantity:
          x-go-type: float64
          type: number
        shipped_quantity:
          x-go-type: float64
          type: number
        remaining_quantity:
          x-go-type: float64
          type: number
        unit_type:
          type: string
        unit_price:
          x-go-type: float64
          type: number
        total_price:
          x-go-type: float64
          type: number
        back_ordered_quantity:
          x-go-type: float64
          type: number
        disposition:
          $ref: '#/components/schemas/OrderItemDisposition'
        releases:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRelease'
    OrderItemRelease:
      required:
        - date_released
        - released_quantity
        - shipped_quantity
        - canceled_quantity
      type: object
      properties:
        date_released:
          type: string
          format: date-time
        released_quantity:
          type: number
          x-go-type: float64
        shipped_quantity:
          type: number
          x-go-type: float64
        canceled_quantity:
          type: number
          x-go-type: float64
    OrderSummary:
      required:
        - id
        - contact_id
        - branch_id
        - purchase_order
        - status
        - date_ordered
        - date_requested
      type: object
      properties:
        id:
          type: string
        contact_id:
          type: string
        branch_id:
          type: string
        purchase_order:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        date_ordered:
          type: string
          format: date-time
        date_requested:
          type: string
          format: date-time
    PurchaseSummary:
      required:
        - product_id
        - product_sn
        - product_name
        - product_description
        - ordered_quantity
        - unit_of_measurement
      type: object
      properties:
        product_id:
          type: string
        product_sn:
          type: string
        product_name:
          type: string
        product_description:
          type: string
        ordered_quantity:
          type: number
          x-go-type: float64
        unit_of_measurement:
          type: string
    QuoteStatus:
      type: string
      enum:
        - unspecified
        - pending
        - processed
        - cancelled
        - closed
    QuoteSummary:
      required:
        - id
        - contact_id
        - branch_id
        - purchase_order
        - status
        - date_created
        - date_expires
      type: object
      properties:
        id:
          type: string
        contact_id:
          type: string
        branch_id:
          type: string
        purchase_order:
          type: string
        status:
          $ref: '#/components/schemas/QuoteStatus'
        date_created:
          type: string
          format: date-time
        date_expires:
          type: string
          format: date-time
    Quote:
      required:
        - id
        - purchase_order
        - status
        - date_created
        - date_expires
        - items
      type: object
      properties:
        id:
          type: string
        purchase_order:
          type: string
        date_created:
          type: string
          format: date-time
        date_expires:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/QuoteStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuoteItem'
    QuoteItem:
      required:
        - product_id
        - product_sn
        - product_name
        - customer_product_sn
        - ordered_quantity
        - unit_type
        - unit_price
        - total_price
      type: object
      properties:
        product_id:
          type: string
        product_sn:
          type: string
        product_name:
          type: string
        customer_product_sn:
          type: string
        ordered_quantity:
          type: number
          x-go-type: float64
        unit_type:
          type: string
        unit_price:
          type: number
          x-go-type: float64
        total_price:
          type: number
          x-go-type: float64
    Product:
      required:
        - id
        - sn
        - name
        - description
        - product_group_id
        - product_group_name
        - sales_unit_of_measurement
        - is_active
        - has_stock
      type: object
      properties:
        id:
          type: string
        sn:
          type: string
        name:
          type: string
        description:
          type: string
        product_group_id:
          type: string
        product_group_name:
          type: string
        sales_unit_of_measurement:
          $ref: '#/components/schemas/UnitOfMeasurement'
        image_url:
          type: string
        is_active:
          type: boolean
          description: Indicates if the product is active
        has_stock:
          type: boolean
          description: Indicated if the product has stock
    ProductSearchResult:
      allOf:
        - $ref: '#/components/schemas/Product'
    UnitOfMeasurement:
      required:
        - id
        - conversion_factor
      type: object
      properties:
        id:
          type: string
        conversion_factor:
          type: number
          x-go-type: float64
    Aggregation:
      oneOf:
        - $ref: '#/components/schemas/RangeAggregation'
        - $ref: '#/components/schemas/TermsAggregation'
      discriminator:
        propertyName: objectType
    AggregationCommonProperties:
      required:
        - field_name
      type: object
      properties:
        field_name:
          type: string
    RangeAggregation:
      allOf:
        - "$ref": '#/components/schemas/AggregationCommonProperties'
        - type: object

    TermsAggregation:
      required:
        - buckets
      allOf:
        - "$ref": '#/components/schemas/AggregationCommonProperties'
        - type: object
          properties:
            buckets:
              type: array
              items:
                $ref: '#/components/schemas/TermsAggregationBucket'
    TermsAggregationBucket:
      required:
        - key
        - count
      type: object
      properties:
        key:
          type: string
        count:
          type: integer
    FormValidationError:
      description: "Form validation errors"
      type: object
      properties:
        errors:
          type: array
          description: List of validation errors
          items:
            type: object
            properties:
              field:
                type: string
                description: The field where the validation error occurred
              message:
                type: string
                description: A descriptive error message
    Error:
      description: Represents error object
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message
