name: "Build"
env:
  GOPRIVATE: github.com/{organisation}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  cross-compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        binary:
          - linux_amd64
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
          ssh-add - <<< "${{ secrets.GO_MODULE_PRIVATE_KEY }}"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
      - name: Setup access for private go modules
        run: |
          git config --global url."ssh://git@github.com/".insteadOf https://github.com/
      - name: Build Binary for ${{ matrix.binary }}
        run: make build/${{ matrix.binary }}
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: server_${{ matrix.binary }}
          path: ./bin/*
  publish-stable:
    runs-on: ubuntu-latest
    needs: [ cross-compile ]
    if: (startsWith(github.ref, 'refs/tags/v')) && github.repository == 'materials-resources/store-api'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Download Sever Binaries
        uses: actions/download-artifact@v4
        with:
          path: ./bin
          pattern: server_*
          merge-multiple: true
      - name: Add Permissions to binaries
        run: chmod -R +x ./bin
      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          context: .
          containerfiles: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          oci: true
      - name: Push image to registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}



